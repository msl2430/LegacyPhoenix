'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3074
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("MedicaidDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class MedicaidDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableOPS31 As OPS31DataTable
    
    Private tableOPS32 As OPS32DataTable
    
    Private tableOPS61 As OPS61DataTable
    
    Private tableOPS64 As OPS64DataTable
    
    Private tableOPS66 As OPS66DataTable
    
    Private tableTransactionLog As TransactionLogDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("OPS31")) Is Nothing) Then
                MyBase.Tables.Add(New OPS31DataTable(ds.Tables("OPS31")))
            End If
            If (Not (ds.Tables("OPS32")) Is Nothing) Then
                MyBase.Tables.Add(New OPS32DataTable(ds.Tables("OPS32")))
            End If
            If (Not (ds.Tables("OPS61")) Is Nothing) Then
                MyBase.Tables.Add(New OPS61DataTable(ds.Tables("OPS61")))
            End If
            If (Not (ds.Tables("OPS64")) Is Nothing) Then
                MyBase.Tables.Add(New OPS64DataTable(ds.Tables("OPS64")))
            End If
            If (Not (ds.Tables("OPS66")) Is Nothing) Then
                MyBase.Tables.Add(New OPS66DataTable(ds.Tables("OPS66")))
            End If
            If (Not (ds.Tables("TransactionLog")) Is Nothing) Then
                MyBase.Tables.Add(New TransactionLogDataTable(ds.Tables("TransactionLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPS31() As OPS31DataTable
        Get
            Return Me.tableOPS31
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPS32() As OPS32DataTable
        Get
            Return Me.tableOPS32
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPS61() As OPS61DataTable
        Get
            Return Me.tableOPS61
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPS64() As OPS64DataTable
        Get
            Return Me.tableOPS64
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OPS66() As OPS66DataTable
        Get
            Return Me.tableOPS66
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TransactionLog() As TransactionLogDataTable
        Get
            Return Me.tableTransactionLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As MedicaidDataSet = CType(MyBase.Clone,MedicaidDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("OPS31")) Is Nothing) Then
                MyBase.Tables.Add(New OPS31DataTable(ds.Tables("OPS31")))
            End If
            If (Not (ds.Tables("OPS32")) Is Nothing) Then
                MyBase.Tables.Add(New OPS32DataTable(ds.Tables("OPS32")))
            End If
            If (Not (ds.Tables("OPS61")) Is Nothing) Then
                MyBase.Tables.Add(New OPS61DataTable(ds.Tables("OPS61")))
            End If
            If (Not (ds.Tables("OPS64")) Is Nothing) Then
                MyBase.Tables.Add(New OPS64DataTable(ds.Tables("OPS64")))
            End If
            If (Not (ds.Tables("OPS66")) Is Nothing) Then
                MyBase.Tables.Add(New OPS66DataTable(ds.Tables("OPS66")))
            End If
            If (Not (ds.Tables("TransactionLog")) Is Nothing) Then
                MyBase.Tables.Add(New TransactionLogDataTable(ds.Tables("TransactionLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableOPS31 = CType(MyBase.Tables("OPS31"),OPS31DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPS31) Is Nothing) Then
                Me.tableOPS31.InitVars
            End If
        End If
        Me.tableOPS32 = CType(MyBase.Tables("OPS32"),OPS32DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPS32) Is Nothing) Then
                Me.tableOPS32.InitVars
            End If
        End If
        Me.tableOPS61 = CType(MyBase.Tables("OPS61"),OPS61DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPS61) Is Nothing) Then
                Me.tableOPS61.InitVars
            End If
        End If
        Me.tableOPS64 = CType(MyBase.Tables("OPS64"),OPS64DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPS64) Is Nothing) Then
                Me.tableOPS64.InitVars
            End If
        End If
        Me.tableOPS66 = CType(MyBase.Tables("OPS66"),OPS66DataTable)
        If (initTable = true) Then
            If (Not (Me.tableOPS66) Is Nothing) Then
                Me.tableOPS66.InitVars
            End If
        End If
        Me.tableTransactionLog = CType(MyBase.Tables("TransactionLog"),TransactionLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTransactionLog) Is Nothing) Then
                Me.tableTransactionLog.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "MedicaidDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/MedicaidDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableOPS31 = New OPS31DataTable
        MyBase.Tables.Add(Me.tableOPS31)
        Me.tableOPS32 = New OPS32DataTable
        MyBase.Tables.Add(Me.tableOPS32)
        Me.tableOPS61 = New OPS61DataTable
        MyBase.Tables.Add(Me.tableOPS61)
        Me.tableOPS64 = New OPS64DataTable
        MyBase.Tables.Add(Me.tableOPS64)
        Me.tableOPS66 = New OPS66DataTable
        MyBase.Tables.Add(Me.tableOPS66)
        Me.tableTransactionLog = New TransactionLogDataTable
        MyBase.Tables.Add(Me.tableTransactionLog)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOPS31() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOPS32() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOPS61() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOPS64() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeOPS66() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTransactionLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As MedicaidDataSet = New MedicaidDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub OPS31RowChangeEventHandler(ByVal sender As Object, ByVal e As OPS31RowChangeEvent)
    
    Public Delegate Sub OPS32RowChangeEventHandler(ByVal sender As Object, ByVal e As OPS32RowChangeEvent)
    
    Public Delegate Sub OPS61RowChangeEventHandler(ByVal sender As Object, ByVal e As OPS61RowChangeEvent)
    
    Public Delegate Sub OPS64RowChangeEventHandler(ByVal sender As Object, ByVal e As OPS64RowChangeEvent)
    
    Public Delegate Sub OPS66RowChangeEventHandler(ByVal sender As Object, ByVal e As OPS66RowChangeEvent)
    
    Public Delegate Sub TransactionLogRowChangeEventHandler(ByVal sender As Object, ByVal e As TransactionLogRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPS31DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnAppDate As Global.System.Data.DataColumn
        
        Private columnActionCode As Global.System.Data.DataColumn
        
        Private columnEligible As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleInitial As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnSocialSecurity As Global.System.Data.DataColumn
        
        Private columnSex As Global.System.Data.DataColumn
        
        Private columnMaritalStatus As Global.System.Data.DataColumn
        
        Private columnRace As Global.System.Data.DataColumn
        
        Private columnPriorCaseNumber As Global.System.Data.DataColumn
        
        Private columnPriorPersonNumber As Global.System.Data.DataColumn
        
        Private columnApplicationCode As Global.System.Data.DataColumn
        
        Private columnLTC As Global.System.Data.DataColumn
        
        Private columnEffectiveDate1 As Global.System.Data.DataColumn
        
        Private columnTerminationDate1 As Global.System.Data.DataColumn
        
        Private columnTypeCode1 As Global.System.Data.DataColumn
        
        Private columnAddCode1 As Global.System.Data.DataColumn
        
        Private columnTermCode1 As Global.System.Data.DataColumn
        
        Private columnProgramStatus1 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate1 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate2 As Global.System.Data.DataColumn
        
        Private columnTerminationDate2 As Global.System.Data.DataColumn
        
        Private columnTypeCode2 As Global.System.Data.DataColumn
        
        Private columnAddCode2 As Global.System.Data.DataColumn
        
        Private columnTermCode2 As Global.System.Data.DataColumn
        
        Private columnProgramStatus2 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate2 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate3 As Global.System.Data.DataColumn
        
        Private columnTerminationDate3 As Global.System.Data.DataColumn
        
        Private columnTypeCode3 As Global.System.Data.DataColumn
        
        Private columnAddCode3 As Global.System.Data.DataColumn
        
        Private columnTermCode3 As Global.System.Data.DataColumn
        
        Private columnProgramStatus3 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate3 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate4 As Global.System.Data.DataColumn
        
        Private columnTerminationDate4 As Global.System.Data.DataColumn
        
        Private columnTypeCode4 As Global.System.Data.DataColumn
        
        Private columnAddCode4 As Global.System.Data.DataColumn
        
        Private columnTermCode4 As Global.System.Data.DataColumn
        
        Private columnProgramStatus4 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate4 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate5 As Global.System.Data.DataColumn
        
        Private columnTerminationDate5 As Global.System.Data.DataColumn
        
        Private columnTypeCode5 As Global.System.Data.DataColumn
        
        Private columnAddCode5 As Global.System.Data.DataColumn
        
        Private columnTermCode5 As Global.System.Data.DataColumn
        
        Private columnProgramStatus5 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate5 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate6 As Global.System.Data.DataColumn
        
        Private columnTerminationDate6 As Global.System.Data.DataColumn
        
        Private columnTypeCode6 As Global.System.Data.DataColumn
        
        Private columnAddCode6 As Global.System.Data.DataColumn
        
        Private columnTermCode6 As Global.System.Data.DataColumn
        
        Private columnProgramStatus6 As Global.System.Data.DataColumn
        
        Private columnPregnancyDueDate6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPS31"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AppDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EligibleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEligible
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MiddleInitialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleInitial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SocialSecurityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSocialSecurity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaritalStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRace
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PriorCaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PriorPersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ApplicationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApplicationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatus6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregnancyDueDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregnancyDueDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPS31Row
            Get
                Return CType(Me.Rows(index),OPS31Row)
            End Get
        End Property
        
        Public Event OPS31RowChanging As OPS31RowChangeEventHandler
        
        Public Event OPS31RowChanged As OPS31RowChangeEventHandler
        
        Public Event OPS31RowDeleting As OPS31RowChangeEventHandler
        
        Public Event OPS31RowDeleted As OPS31RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOPS31Row(ByVal row As OPS31Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOPS31Row( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal AppDate As String,  _
                    ByVal ActionCode As String,  _
                    ByVal Eligible As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleInitial As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal SocialSecurity As String,  _
                    ByVal Sex As String,  _
                    ByVal MaritalStatus As String,  _
                    ByVal Race As String,  _
                    ByVal PriorCaseNumber As String,  _
                    ByVal PriorPersonNumber As String,  _
                    ByVal ApplicationCode As String,  _
                    ByVal LTC As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal TypeCode1 As String,  _
                    ByVal AddCode1 As String,  _
                    ByVal TermCode1 As String,  _
                    ByVal ProgramStatus1 As String,  _
                    ByVal PregnancyDueDate1 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal TypeCode2 As String,  _
                    ByVal AddCode2 As String,  _
                    ByVal TermCode2 As String,  _
                    ByVal ProgramStatus2 As String,  _
                    ByVal PregnancyDueDate2 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal TypeCode3 As String,  _
                    ByVal AddCode3 As String,  _
                    ByVal TermCode3 As String,  _
                    ByVal ProgramStatus3 As String,  _
                    ByVal PregnancyDueDate3 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal TypeCode4 As String,  _
                    ByVal AddCode4 As String,  _
                    ByVal TermCode4 As String,  _
                    ByVal ProgramStatus4 As String,  _
                    ByVal PregnancyDueDate4 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal TypeCode5 As String,  _
                    ByVal AddCode5 As String,  _
                    ByVal TermCode5 As String,  _
                    ByVal ProgramStatus5 As String,  _
                    ByVal PregnancyDueDate5 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String,  _
                    ByVal TypeCode6 As String,  _
                    ByVal AddCode6 As String,  _
                    ByVal TermCode6 As String,  _
                    ByVal ProgramStatus6 As String,  _
                    ByVal PregnancyDueDate6 As String) As OPS31Row
            Dim rowOPS31Row As OPS31Row = CType(Me.NewRow,OPS31Row)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PersonNumber, AppDate, ActionCode, Eligible, LastName, FirstName, MiddleInitial, DateOfBirth, SocialSecurity, Sex, MaritalStatus, Race, PriorCaseNumber, PriorPersonNumber, ApplicationCode, LTC, EffectiveDate1, TerminationDate1, TypeCode1, AddCode1, TermCode1, ProgramStatus1, PregnancyDueDate1, EffectiveDate2, TerminationDate2, TypeCode2, AddCode2, TermCode2, ProgramStatus2, PregnancyDueDate2, EffectiveDate3, TerminationDate3, TypeCode3, AddCode3, TermCode3, ProgramStatus3, PregnancyDueDate3, EffectiveDate4, TerminationDate4, TypeCode4, AddCode4, TermCode4, ProgramStatus4, PregnancyDueDate4, EffectiveDate5, TerminationDate5, TypeCode5, AddCode5, TermCode5, ProgramStatus5, PregnancyDueDate5, EffectiveDate6, TerminationDate6, TypeCode6, AddCode6, TermCode6, ProgramStatus6, PregnancyDueDate6}
            rowOPS31Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPS31Row)
            Return rowOPS31Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPS31DataTable = CType(MyBase.Clone,OPS31DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPS31DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnAppDate = MyBase.Columns("AppDate")
            Me.columnActionCode = MyBase.Columns("ActionCode")
            Me.columnEligible = MyBase.Columns("Eligible")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleInitial = MyBase.Columns("MiddleInitial")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnSocialSecurity = MyBase.Columns("SocialSecurity")
            Me.columnSex = MyBase.Columns("Sex")
            Me.columnMaritalStatus = MyBase.Columns("MaritalStatus")
            Me.columnRace = MyBase.Columns("Race")
            Me.columnPriorCaseNumber = MyBase.Columns("PriorCaseNumber")
            Me.columnPriorPersonNumber = MyBase.Columns("PriorPersonNumber")
            Me.columnApplicationCode = MyBase.Columns("ApplicationCode")
            Me.columnLTC = MyBase.Columns("LTC")
            Me.columnEffectiveDate1 = MyBase.Columns("EffectiveDate1")
            Me.columnTerminationDate1 = MyBase.Columns("TerminationDate1")
            Me.columnTypeCode1 = MyBase.Columns("TypeCode1")
            Me.columnAddCode1 = MyBase.Columns("AddCode1")
            Me.columnTermCode1 = MyBase.Columns("TermCode1")
            Me.columnProgramStatus1 = MyBase.Columns("ProgramStatus1")
            Me.columnPregnancyDueDate1 = MyBase.Columns("PregnancyDueDate1")
            Me.columnEffectiveDate2 = MyBase.Columns("EffectiveDate2")
            Me.columnTerminationDate2 = MyBase.Columns("TerminationDate2")
            Me.columnTypeCode2 = MyBase.Columns("TypeCode2")
            Me.columnAddCode2 = MyBase.Columns("AddCode2")
            Me.columnTermCode2 = MyBase.Columns("TermCode2")
            Me.columnProgramStatus2 = MyBase.Columns("ProgramStatus2")
            Me.columnPregnancyDueDate2 = MyBase.Columns("PregnancyDueDate2")
            Me.columnEffectiveDate3 = MyBase.Columns("EffectiveDate3")
            Me.columnTerminationDate3 = MyBase.Columns("TerminationDate3")
            Me.columnTypeCode3 = MyBase.Columns("TypeCode3")
            Me.columnAddCode3 = MyBase.Columns("AddCode3")
            Me.columnTermCode3 = MyBase.Columns("TermCode3")
            Me.columnProgramStatus3 = MyBase.Columns("ProgramStatus3")
            Me.columnPregnancyDueDate3 = MyBase.Columns("PregnancyDueDate3")
            Me.columnEffectiveDate4 = MyBase.Columns("EffectiveDate4")
            Me.columnTerminationDate4 = MyBase.Columns("TerminationDate4")
            Me.columnTypeCode4 = MyBase.Columns("TypeCode4")
            Me.columnAddCode4 = MyBase.Columns("AddCode4")
            Me.columnTermCode4 = MyBase.Columns("TermCode4")
            Me.columnProgramStatus4 = MyBase.Columns("ProgramStatus4")
            Me.columnPregnancyDueDate4 = MyBase.Columns("PregnancyDueDate4")
            Me.columnEffectiveDate5 = MyBase.Columns("EffectiveDate5")
            Me.columnTerminationDate5 = MyBase.Columns("TerminationDate5")
            Me.columnTypeCode5 = MyBase.Columns("TypeCode5")
            Me.columnAddCode5 = MyBase.Columns("AddCode5")
            Me.columnTermCode5 = MyBase.Columns("TermCode5")
            Me.columnProgramStatus5 = MyBase.Columns("ProgramStatus5")
            Me.columnPregnancyDueDate5 = MyBase.Columns("PregnancyDueDate5")
            Me.columnEffectiveDate6 = MyBase.Columns("EffectiveDate6")
            Me.columnTerminationDate6 = MyBase.Columns("TerminationDate6")
            Me.columnTypeCode6 = MyBase.Columns("TypeCode6")
            Me.columnAddCode6 = MyBase.Columns("AddCode6")
            Me.columnTermCode6 = MyBase.Columns("TermCode6")
            Me.columnProgramStatus6 = MyBase.Columns("ProgramStatus6")
            Me.columnPregnancyDueDate6 = MyBase.Columns("PregnancyDueDate6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnAppDate = New Global.System.Data.DataColumn("AppDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppDate)
            Me.columnActionCode = New Global.System.Data.DataColumn("ActionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActionCode)
            Me.columnEligible = New Global.System.Data.DataColumn("Eligible", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEligible)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleInitial = New Global.System.Data.DataColumn("MiddleInitial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleInitial)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnSocialSecurity = New Global.System.Data.DataColumn("SocialSecurity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSocialSecurity)
            Me.columnSex = New Global.System.Data.DataColumn("Sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSex)
            Me.columnMaritalStatus = New Global.System.Data.DataColumn("MaritalStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStatus)
            Me.columnRace = New Global.System.Data.DataColumn("Race", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRace)
            Me.columnPriorCaseNumber = New Global.System.Data.DataColumn("PriorCaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorCaseNumber)
            Me.columnPriorPersonNumber = New Global.System.Data.DataColumn("PriorPersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorPersonNumber)
            Me.columnApplicationCode = New Global.System.Data.DataColumn("ApplicationCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApplicationCode)
            Me.columnLTC = New Global.System.Data.DataColumn("LTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLTC)
            Me.columnEffectiveDate1 = New Global.System.Data.DataColumn("EffectiveDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate1)
            Me.columnTerminationDate1 = New Global.System.Data.DataColumn("TerminationDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate1)
            Me.columnTypeCode1 = New Global.System.Data.DataColumn("TypeCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode1)
            Me.columnAddCode1 = New Global.System.Data.DataColumn("AddCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode1)
            Me.columnTermCode1 = New Global.System.Data.DataColumn("TermCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode1)
            Me.columnProgramStatus1 = New Global.System.Data.DataColumn("ProgramStatus1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus1)
            Me.columnPregnancyDueDate1 = New Global.System.Data.DataColumn("PregnancyDueDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate1)
            Me.columnEffectiveDate2 = New Global.System.Data.DataColumn("EffectiveDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate2)
            Me.columnTerminationDate2 = New Global.System.Data.DataColumn("TerminationDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate2)
            Me.columnTypeCode2 = New Global.System.Data.DataColumn("TypeCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode2)
            Me.columnAddCode2 = New Global.System.Data.DataColumn("AddCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode2)
            Me.columnTermCode2 = New Global.System.Data.DataColumn("TermCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode2)
            Me.columnProgramStatus2 = New Global.System.Data.DataColumn("ProgramStatus2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus2)
            Me.columnPregnancyDueDate2 = New Global.System.Data.DataColumn("PregnancyDueDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate2)
            Me.columnEffectiveDate3 = New Global.System.Data.DataColumn("EffectiveDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate3)
            Me.columnTerminationDate3 = New Global.System.Data.DataColumn("TerminationDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate3)
            Me.columnTypeCode3 = New Global.System.Data.DataColumn("TypeCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode3)
            Me.columnAddCode3 = New Global.System.Data.DataColumn("AddCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode3)
            Me.columnTermCode3 = New Global.System.Data.DataColumn("TermCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode3)
            Me.columnProgramStatus3 = New Global.System.Data.DataColumn("ProgramStatus3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus3)
            Me.columnPregnancyDueDate3 = New Global.System.Data.DataColumn("PregnancyDueDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate3)
            Me.columnEffectiveDate4 = New Global.System.Data.DataColumn("EffectiveDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate4)
            Me.columnTerminationDate4 = New Global.System.Data.DataColumn("TerminationDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate4)
            Me.columnTypeCode4 = New Global.System.Data.DataColumn("TypeCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode4)
            Me.columnAddCode4 = New Global.System.Data.DataColumn("AddCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode4)
            Me.columnTermCode4 = New Global.System.Data.DataColumn("TermCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode4)
            Me.columnProgramStatus4 = New Global.System.Data.DataColumn("ProgramStatus4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus4)
            Me.columnPregnancyDueDate4 = New Global.System.Data.DataColumn("PregnancyDueDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate4)
            Me.columnEffectiveDate5 = New Global.System.Data.DataColumn("EffectiveDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate5)
            Me.columnTerminationDate5 = New Global.System.Data.DataColumn("TerminationDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate5)
            Me.columnTypeCode5 = New Global.System.Data.DataColumn("TypeCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode5)
            Me.columnAddCode5 = New Global.System.Data.DataColumn("AddCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode5)
            Me.columnTermCode5 = New Global.System.Data.DataColumn("TermCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode5)
            Me.columnProgramStatus5 = New Global.System.Data.DataColumn("ProgramStatus5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus5)
            Me.columnPregnancyDueDate5 = New Global.System.Data.DataColumn("PregnancyDueDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate5)
            Me.columnEffectiveDate6 = New Global.System.Data.DataColumn("EffectiveDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate6)
            Me.columnTerminationDate6 = New Global.System.Data.DataColumn("TerminationDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate6)
            Me.columnTypeCode6 = New Global.System.Data.DataColumn("TypeCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCode6)
            Me.columnAddCode6 = New Global.System.Data.DataColumn("AddCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode6)
            Me.columnTermCode6 = New Global.System.Data.DataColumn("TermCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermCode6)
            Me.columnProgramStatus6 = New Global.System.Data.DataColumn("ProgramStatus6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus6)
            Me.columnPregnancyDueDate6 = New Global.System.Data.DataColumn("PregnancyDueDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregnancyDueDate6)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 2
            Me.columnAppDate.MaxLength = 8
            Me.columnActionCode.MaxLength = 1
            Me.columnEligible.MaxLength = 1
            Me.columnLastName.MaxLength = 12
            Me.columnFirstName.MaxLength = 9
            Me.columnMiddleInitial.MaxLength = 1
            Me.columnDateOfBirth.MaxLength = 8
            Me.columnSocialSecurity.MaxLength = 9
            Me.columnSex.MaxLength = 1
            Me.columnMaritalStatus.MaxLength = 1
            Me.columnRace.MaxLength = 1
            Me.columnPriorCaseNumber.MaxLength = 10
            Me.columnPriorPersonNumber.MaxLength = 2
            Me.columnApplicationCode.MaxLength = 1
            Me.columnLTC.MaxLength = 1
            Me.columnEffectiveDate1.MaxLength = 8
            Me.columnTerminationDate1.MaxLength = 8
            Me.columnTypeCode1.MaxLength = 1
            Me.columnAddCode1.MaxLength = 2
            Me.columnTermCode1.MaxLength = 2
            Me.columnProgramStatus1.MaxLength = 3
            Me.columnPregnancyDueDate1.MaxLength = 8
            Me.columnEffectiveDate2.MaxLength = 8
            Me.columnTerminationDate2.MaxLength = 8
            Me.columnTypeCode2.MaxLength = 1
            Me.columnAddCode2.MaxLength = 2
            Me.columnTermCode2.MaxLength = 2
            Me.columnProgramStatus2.MaxLength = 3
            Me.columnPregnancyDueDate2.MaxLength = 8
            Me.columnEffectiveDate3.MaxLength = 8
            Me.columnTerminationDate3.MaxLength = 8
            Me.columnTypeCode3.MaxLength = 1
            Me.columnAddCode3.MaxLength = 2
            Me.columnTermCode3.MaxLength = 2
            Me.columnProgramStatus3.MaxLength = 3
            Me.columnPregnancyDueDate3.MaxLength = 8
            Me.columnEffectiveDate4.MaxLength = 8
            Me.columnTerminationDate4.MaxLength = 8
            Me.columnTypeCode4.MaxLength = 1
            Me.columnAddCode4.MaxLength = 2
            Me.columnTermCode4.MaxLength = 2
            Me.columnProgramStatus4.MaxLength = 3
            Me.columnPregnancyDueDate4.MaxLength = 8
            Me.columnEffectiveDate5.MaxLength = 8
            Me.columnTerminationDate5.MaxLength = 8
            Me.columnTypeCode5.MaxLength = 1
            Me.columnAddCode5.MaxLength = 2
            Me.columnTermCode5.MaxLength = 2
            Me.columnProgramStatus5.MaxLength = 3
            Me.columnPregnancyDueDate5.MaxLength = 8
            Me.columnEffectiveDate6.MaxLength = 8
            Me.columnTerminationDate6.MaxLength = 8
            Me.columnTypeCode6.MaxLength = 1
            Me.columnAddCode6.MaxLength = 2
            Me.columnTermCode6.MaxLength = 2
            Me.columnProgramStatus6.MaxLength = 3
            Me.columnPregnancyDueDate6.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOPS31Row() As OPS31Row
            Return CType(Me.NewRow,OPS31Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPS31Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPS31Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPS31RowChangedEvent) Is Nothing) Then
                RaiseEvent OPS31RowChanged(Me, New OPS31RowChangeEvent(CType(e.Row,OPS31Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPS31RowChangingEvent) Is Nothing) Then
                RaiseEvent OPS31RowChanging(Me, New OPS31RowChangeEvent(CType(e.Row,OPS31Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPS31RowDeletedEvent) Is Nothing) Then
                RaiseEvent OPS31RowDeleted(Me, New OPS31RowChangeEvent(CType(e.Row,OPS31Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPS31RowDeletingEvent) Is Nothing) Then
                RaiseEvent OPS31RowDeleting(Me, New OPS31RowChangeEvent(CType(e.Row,OPS31Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOPS31Row(ByVal row As OPS31Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPS31DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPS32DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnActionCode As Global.System.Data.DataColumn
        
        Private columnInsuranceCode1 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber1 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate1 As Global.System.Data.DataColumn
        
        Private columnTerminationDate1 As Global.System.Data.DataColumn
        
        Private columnInsuranceCode2 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber2 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate2 As Global.System.Data.DataColumn
        
        Private columnTerminationDate2 As Global.System.Data.DataColumn
        
        Private columnInsuranceCode3 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber3 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate3 As Global.System.Data.DataColumn
        
        Private columnTerminationDate3 As Global.System.Data.DataColumn
        
        Private columnInsuranceCode4 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber4 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate4 As Global.System.Data.DataColumn
        
        Private columnTerminationDate4 As Global.System.Data.DataColumn
        
        Private columnInsuranceCode5 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber5 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate5 As Global.System.Data.DataColumn
        
        Private columnTerminationDate5 As Global.System.Data.DataColumn
        
        Private columnInsuranceCode6 As Global.System.Data.DataColumn
        
        Private columnInsurancePolicyNumber6 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate6 As Global.System.Data.DataColumn
        
        Private columnTerminationDate6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPS32"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsuranceCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsuranceCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InsurancePolicyNumber6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsurancePolicyNumber6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPS32Row
            Get
                Return CType(Me.Rows(index),OPS32Row)
            End Get
        End Property
        
        Public Event OPS32RowChanging As OPS32RowChangeEventHandler
        
        Public Event OPS32RowChanged As OPS32RowChangeEventHandler
        
        Public Event OPS32RowDeleting As OPS32RowChangeEventHandler
        
        Public Event OPS32RowDeleted As OPS32RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOPS32Row(ByVal row As OPS32Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOPS32Row( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal ActionCode As String,  _
                    ByVal InsuranceCode1 As String,  _
                    ByVal InsurancePolicyNumber1 As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal InsuranceCode2 As String,  _
                    ByVal InsurancePolicyNumber2 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal InsuranceCode3 As String,  _
                    ByVal InsurancePolicyNumber3 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal InsuranceCode4 As String,  _
                    ByVal InsurancePolicyNumber4 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal InsuranceCode5 As String,  _
                    ByVal InsurancePolicyNumber5 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal InsuranceCode6 As String,  _
                    ByVal InsurancePolicyNumber6 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String) As OPS32Row
            Dim rowOPS32Row As OPS32Row = CType(Me.NewRow,OPS32Row)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PersonNumber, LastName, FirstName, DateOfBirth, ActionCode, InsuranceCode1, InsurancePolicyNumber1, EffectiveDate1, TerminationDate1, InsuranceCode2, InsurancePolicyNumber2, EffectiveDate2, TerminationDate2, InsuranceCode3, InsurancePolicyNumber3, EffectiveDate3, TerminationDate3, InsuranceCode4, InsurancePolicyNumber4, EffectiveDate4, TerminationDate4, InsuranceCode5, InsurancePolicyNumber5, EffectiveDate5, TerminationDate5, InsuranceCode6, InsurancePolicyNumber6, EffectiveDate6, TerminationDate6}
            rowOPS32Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPS32Row)
            Return rowOPS32Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPS32DataTable = CType(MyBase.Clone,OPS32DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPS32DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnActionCode = MyBase.Columns("ActionCode")
            Me.columnInsuranceCode1 = MyBase.Columns("InsuranceCode1")
            Me.columnInsurancePolicyNumber1 = MyBase.Columns("InsurancePolicyNumber1")
            Me.columnEffectiveDate1 = MyBase.Columns("EffectiveDate1")
            Me.columnTerminationDate1 = MyBase.Columns("TerminationDate1")
            Me.columnInsuranceCode2 = MyBase.Columns("InsuranceCode2")
            Me.columnInsurancePolicyNumber2 = MyBase.Columns("InsurancePolicyNumber2")
            Me.columnEffectiveDate2 = MyBase.Columns("EffectiveDate2")
            Me.columnTerminationDate2 = MyBase.Columns("TerminationDate2")
            Me.columnInsuranceCode3 = MyBase.Columns("InsuranceCode3")
            Me.columnInsurancePolicyNumber3 = MyBase.Columns("InsurancePolicyNumber3")
            Me.columnEffectiveDate3 = MyBase.Columns("EffectiveDate3")
            Me.columnTerminationDate3 = MyBase.Columns("TerminationDate3")
            Me.columnInsuranceCode4 = MyBase.Columns("InsuranceCode4")
            Me.columnInsurancePolicyNumber4 = MyBase.Columns("InsurancePolicyNumber4")
            Me.columnEffectiveDate4 = MyBase.Columns("EffectiveDate4")
            Me.columnTerminationDate4 = MyBase.Columns("TerminationDate4")
            Me.columnInsuranceCode5 = MyBase.Columns("InsuranceCode5")
            Me.columnInsurancePolicyNumber5 = MyBase.Columns("InsurancePolicyNumber5")
            Me.columnEffectiveDate5 = MyBase.Columns("EffectiveDate5")
            Me.columnTerminationDate5 = MyBase.Columns("TerminationDate5")
            Me.columnInsuranceCode6 = MyBase.Columns("InsuranceCode6")
            Me.columnInsurancePolicyNumber6 = MyBase.Columns("InsurancePolicyNumber6")
            Me.columnEffectiveDate6 = MyBase.Columns("EffectiveDate6")
            Me.columnTerminationDate6 = MyBase.Columns("TerminationDate6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnActionCode = New Global.System.Data.DataColumn("ActionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActionCode)
            Me.columnInsuranceCode1 = New Global.System.Data.DataColumn("InsuranceCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode1)
            Me.columnInsurancePolicyNumber1 = New Global.System.Data.DataColumn("InsurancePolicyNumber1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber1)
            Me.columnEffectiveDate1 = New Global.System.Data.DataColumn("EffectiveDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate1)
            Me.columnTerminationDate1 = New Global.System.Data.DataColumn("TerminationDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate1)
            Me.columnInsuranceCode2 = New Global.System.Data.DataColumn("InsuranceCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode2)
            Me.columnInsurancePolicyNumber2 = New Global.System.Data.DataColumn("InsurancePolicyNumber2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber2)
            Me.columnEffectiveDate2 = New Global.System.Data.DataColumn("EffectiveDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate2)
            Me.columnTerminationDate2 = New Global.System.Data.DataColumn("TerminationDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate2)
            Me.columnInsuranceCode3 = New Global.System.Data.DataColumn("InsuranceCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode3)
            Me.columnInsurancePolicyNumber3 = New Global.System.Data.DataColumn("InsurancePolicyNumber3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber3)
            Me.columnEffectiveDate3 = New Global.System.Data.DataColumn("EffectiveDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate3)
            Me.columnTerminationDate3 = New Global.System.Data.DataColumn("TerminationDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate3)
            Me.columnInsuranceCode4 = New Global.System.Data.DataColumn("InsuranceCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode4)
            Me.columnInsurancePolicyNumber4 = New Global.System.Data.DataColumn("InsurancePolicyNumber4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber4)
            Me.columnEffectiveDate4 = New Global.System.Data.DataColumn("EffectiveDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate4)
            Me.columnTerminationDate4 = New Global.System.Data.DataColumn("TerminationDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate4)
            Me.columnInsuranceCode5 = New Global.System.Data.DataColumn("InsuranceCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode5)
            Me.columnInsurancePolicyNumber5 = New Global.System.Data.DataColumn("InsurancePolicyNumber5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber5)
            Me.columnEffectiveDate5 = New Global.System.Data.DataColumn("EffectiveDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate5)
            Me.columnTerminationDate5 = New Global.System.Data.DataColumn("TerminationDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate5)
            Me.columnInsuranceCode6 = New Global.System.Data.DataColumn("InsuranceCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsuranceCode6)
            Me.columnInsurancePolicyNumber6 = New Global.System.Data.DataColumn("InsurancePolicyNumber6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsurancePolicyNumber6)
            Me.columnEffectiveDate6 = New Global.System.Data.DataColumn("EffectiveDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate6)
            Me.columnTerminationDate6 = New Global.System.Data.DataColumn("TerminationDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate6)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 2
            Me.columnLastName.MaxLength = 12
            Me.columnFirstName.MaxLength = 9
            Me.columnDateOfBirth.MaxLength = 8
            Me.columnActionCode.MaxLength = 1
            Me.columnInsuranceCode1.MaxLength = 3
            Me.columnInsurancePolicyNumber1.MaxLength = 15
            Me.columnEffectiveDate1.MaxLength = 8
            Me.columnTerminationDate1.MaxLength = 8
            Me.columnInsuranceCode2.MaxLength = 3
            Me.columnInsurancePolicyNumber2.MaxLength = 15
            Me.columnEffectiveDate2.MaxLength = 8
            Me.columnTerminationDate2.MaxLength = 8
            Me.columnInsuranceCode3.MaxLength = 3
            Me.columnInsurancePolicyNumber3.MaxLength = 15
            Me.columnEffectiveDate3.MaxLength = 8
            Me.columnTerminationDate3.MaxLength = 8
            Me.columnInsuranceCode4.MaxLength = 3
            Me.columnInsurancePolicyNumber4.MaxLength = 15
            Me.columnEffectiveDate4.MaxLength = 8
            Me.columnTerminationDate4.MaxLength = 8
            Me.columnInsuranceCode5.MaxLength = 3
            Me.columnInsurancePolicyNumber5.MaxLength = 15
            Me.columnEffectiveDate5.MaxLength = 8
            Me.columnTerminationDate5.MaxLength = 8
            Me.columnInsuranceCode6.MaxLength = 3
            Me.columnInsurancePolicyNumber6.MaxLength = 15
            Me.columnEffectiveDate6.MaxLength = 8
            Me.columnTerminationDate6.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOPS32Row() As OPS32Row
            Return CType(Me.NewRow,OPS32Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPS32Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPS32Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPS32RowChangedEvent) Is Nothing) Then
                RaiseEvent OPS32RowChanged(Me, New OPS32RowChangeEvent(CType(e.Row,OPS32Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPS32RowChangingEvent) Is Nothing) Then
                RaiseEvent OPS32RowChanging(Me, New OPS32RowChangeEvent(CType(e.Row,OPS32Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPS32RowDeletedEvent) Is Nothing) Then
                RaiseEvent OPS32RowDeleted(Me, New OPS32RowChangeEvent(CType(e.Row,OPS32Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPS32RowDeletingEvent) Is Nothing) Then
                RaiseEvent OPS32RowDeleting(Me, New OPS32RowChangeEvent(CType(e.Row,OPS32Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOPS32Row(ByVal row As OPS32Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPS32DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPS61DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnBatchNumber As Global.System.Data.DataColumn
        
        Private columnActionCode As Global.System.Data.DataColumn
        
        Private columnOffice As Global.System.Data.DataColumn
        
        Private columnProviderWarning As Global.System.Data.DataColumn
        
        Private columnCaseName As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnCity As Global.System.Data.DataColumn
        
        Private columnState As Global.System.Data.DataColumn
        
        Private columnZip As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnInt1 As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnSocSec As Global.System.Data.DataColumn
        
        Private columnSex As Global.System.Data.DataColumn
        
        Private columnMaritalStat As Global.System.Data.DataColumn
        
        Private columnRace As Global.System.Data.DataColumn
        
        Private columnPriorCase As Global.System.Data.DataColumn
        
        Private columnPriorPerNumber As Global.System.Data.DataColumn
        
        Private columnAlienType As Global.System.Data.DataColumn
        
        Private columnEntryDate As Global.System.Data.DataColumn
        
        Private columnEligSeg As Global.System.Data.DataColumn
        
        Private columnEffDate1 As Global.System.Data.DataColumn
        
        Private columnTermDate1 As Global.System.Data.DataColumn
        
        Private columnAddCode1 As Global.System.Data.DataColumn
        
        Private columnTRMCode1 As Global.System.Data.DataColumn
        
        Private columnPGM1 As Global.System.Data.DataColumn
        
        Private columnSUPV1 As Global.System.Data.DataColumn
        
        Private columnRES1 As Global.System.Data.DataColumn
        
        Private columnExtType1 As Global.System.Data.DataColumn
        
        Private columnPregDuedate1 As Global.System.Data.DataColumn
        
        Private columnEffDate2 As Global.System.Data.DataColumn
        
        Private columnTermDate2 As Global.System.Data.DataColumn
        
        Private columnAddCode2 As Global.System.Data.DataColumn
        
        Private columnTRMCode2 As Global.System.Data.DataColumn
        
        Private columnPGM2 As Global.System.Data.DataColumn
        
        Private columnSUPV2 As Global.System.Data.DataColumn
        
        Private columnRES2 As Global.System.Data.DataColumn
        
        Private columnExtType2 As Global.System.Data.DataColumn
        
        Private columnPregDuedate2 As Global.System.Data.DataColumn
        
        Private columnEffDate3 As Global.System.Data.DataColumn
        
        Private columnTermDate3 As Global.System.Data.DataColumn
        
        Private columnAddCode3 As Global.System.Data.DataColumn
        
        Private columnTRMCode3 As Global.System.Data.DataColumn
        
        Private columnPGM3 As Global.System.Data.DataColumn
        
        Private columnSUPV3 As Global.System.Data.DataColumn
        
        Private columnRES3 As Global.System.Data.DataColumn
        
        Private columnExtType3 As Global.System.Data.DataColumn
        
        Private columnPregDuedate3 As Global.System.Data.DataColumn
        
        Private columnEffDate4 As Global.System.Data.DataColumn
        
        Private columnTermDate4 As Global.System.Data.DataColumn
        
        Private columnAddCode4 As Global.System.Data.DataColumn
        
        Private columnTRMCode4 As Global.System.Data.DataColumn
        
        Private columnPGM4 As Global.System.Data.DataColumn
        
        Private columnSUPV4 As Global.System.Data.DataColumn
        
        Private columnRES4 As Global.System.Data.DataColumn
        
        Private columnExtType4 As Global.System.Data.DataColumn
        
        Private columnPregDuedate4 As Global.System.Data.DataColumn
        
        Private columnEffDate5 As Global.System.Data.DataColumn
        
        Private columnTermDate5 As Global.System.Data.DataColumn
        
        Private columnAddCode5 As Global.System.Data.DataColumn
        
        Private columnTRMCode5 As Global.System.Data.DataColumn
        
        Private columnPGM5 As Global.System.Data.DataColumn
        
        Private columnSUPV5 As Global.System.Data.DataColumn
        
        Private columnRES5 As Global.System.Data.DataColumn
        
        Private columnExtType5 As Global.System.Data.DataColumn
        
        Private columnPregDuedate5 As Global.System.Data.DataColumn
        
        Private columnEffDate6 As Global.System.Data.DataColumn
        
        Private columnTermDate6 As Global.System.Data.DataColumn
        
        Private columnAddCode6 As Global.System.Data.DataColumn
        
        Private columnTRMCode6 As Global.System.Data.DataColumn
        
        Private columnPGM6 As Global.System.Data.DataColumn
        
        Private columnSUPV6 As Global.System.Data.DataColumn
        
        Private columnRES6 As Global.System.Data.DataColumn
        
        Private columnExtType6 As Global.System.Data.DataColumn
        
        Private columnPregDuedate6 As Global.System.Data.DataColumn
        
        Private columnAddressAction As Global.System.Data.DataColumn
        
        Private columnPersonAction As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPS61"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BatchNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OfficeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOffice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProviderWarningColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProviderWarning
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Int1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInt1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SocSecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSocSec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaritalStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaritalStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RaceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRace
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PriorCaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorCase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PriorPerNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriorPerNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AlienTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlienType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EntryDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntryDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EligSegColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEligSeg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TermDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTermDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRMCode6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRMCode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PGM6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPGM6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUPV6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUPV6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RES6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExtType6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtType6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PregDuedate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPregDuedate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddressAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonActionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonAction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPS61Row
            Get
                Return CType(Me.Rows(index),OPS61Row)
            End Get
        End Property
        
        Public Event OPS61RowChanging As OPS61RowChangeEventHandler
        
        Public Event OPS61RowChanged As OPS61RowChangeEventHandler
        
        Public Event OPS61RowDeleting As OPS61RowChangeEventHandler
        
        Public Event OPS61RowDeleted As OPS61RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOPS61Row(ByVal row As OPS61Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOPS61Row( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal BatchNumber As String,  _
                    ByVal ActionCode As String,  _
                    ByVal Office As String,  _
                    ByVal ProviderWarning As String,  _
                    ByVal CaseName As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Zip As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal Int1 As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal SocSec As String,  _
                    ByVal Sex As String,  _
                    ByVal MaritalStat As String,  _
                    ByVal Race As String,  _
                    ByVal PriorCase As String,  _
                    ByVal PriorPerNumber As String,  _
                    ByVal AlienType As String,  _
                    ByVal EntryDate As String,  _
                    ByVal EligSeg As String,  _
                    ByVal EffDate1 As String,  _
                    ByVal TermDate1 As String,  _
                    ByVal AddCode1 As String,  _
                    ByVal TRMCode1 As String,  _
                    ByVal PGM1 As String,  _
                    ByVal SUPV1 As String,  _
                    ByVal RES1 As String,  _
                    ByVal ExtType1 As String,  _
                    ByVal PregDuedate1 As String,  _
                    ByVal EffDate2 As String,  _
                    ByVal TermDate2 As String,  _
                    ByVal AddCode2 As String,  _
                    ByVal TRMCode2 As String,  _
                    ByVal PGM2 As String,  _
                    ByVal SUPV2 As String,  _
                    ByVal RES2 As String,  _
                    ByVal ExtType2 As String,  _
                    ByVal PregDuedate2 As String,  _
                    ByVal EffDate3 As String,  _
                    ByVal TermDate3 As String,  _
                    ByVal AddCode3 As String,  _
                    ByVal TRMCode3 As String,  _
                    ByVal PGM3 As String,  _
                    ByVal SUPV3 As String,  _
                    ByVal RES3 As String,  _
                    ByVal ExtType3 As String,  _
                    ByVal PregDuedate3 As String,  _
                    ByVal EffDate4 As String,  _
                    ByVal TermDate4 As String,  _
                    ByVal AddCode4 As String,  _
                    ByVal TRMCode4 As String,  _
                    ByVal PGM4 As String,  _
                    ByVal SUPV4 As String,  _
                    ByVal RES4 As String,  _
                    ByVal ExtType4 As String,  _
                    ByVal PregDuedate4 As String,  _
                    ByVal EffDate5 As String,  _
                    ByVal TermDate5 As String,  _
                    ByVal AddCode5 As String,  _
                    ByVal TRMCode5 As String,  _
                    ByVal PGM5 As String,  _
                    ByVal SUPV5 As String,  _
                    ByVal RES5 As String,  _
                    ByVal ExtType5 As String,  _
                    ByVal PregDuedate5 As String,  _
                    ByVal EffDate6 As String,  _
                    ByVal TermDate6 As String,  _
                    ByVal AddCode6 As String,  _
                    ByVal TRMCode6 As String,  _
                    ByVal PGM6 As String,  _
                    ByVal SUPV6 As String,  _
                    ByVal RES6 As String,  _
                    ByVal ExtType6 As String,  _
                    ByVal PregDuedate6 As String,  _
                    ByVal AddressAction As String,  _
                    ByVal PersonAction As String) As OPS61Row
            Dim rowOPS61Row As OPS61Row = CType(Me.NewRow,OPS61Row)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PersonNumber, BatchNumber, ActionCode, Office, ProviderWarning, CaseName, Address, City, State, Zip, LastName, FirstName, Int1, DateOfBirth, SocSec, Sex, MaritalStat, Race, PriorCase, PriorPerNumber, AlienType, EntryDate, EligSeg, EffDate1, TermDate1, AddCode1, TRMCode1, PGM1, SUPV1, RES1, ExtType1, PregDuedate1, EffDate2, TermDate2, AddCode2, TRMCode2, PGM2, SUPV2, RES2, ExtType2, PregDuedate2, EffDate3, TermDate3, AddCode3, TRMCode3, PGM3, SUPV3, RES3, ExtType3, PregDuedate3, EffDate4, TermDate4, AddCode4, TRMCode4, PGM4, SUPV4, RES4, ExtType4, PregDuedate4, EffDate5, TermDate5, AddCode5, TRMCode5, PGM5, SUPV5, RES5, ExtType5, PregDuedate5, EffDate6, TermDate6, AddCode6, TRMCode6, PGM6, SUPV6, RES6, ExtType6, PregDuedate6, AddressAction, PersonAction}
            rowOPS61Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPS61Row)
            Return rowOPS61Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPS61DataTable = CType(MyBase.Clone,OPS61DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPS61DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnBatchNumber = MyBase.Columns("BatchNumber")
            Me.columnActionCode = MyBase.Columns("ActionCode")
            Me.columnOffice = MyBase.Columns("Office")
            Me.columnProviderWarning = MyBase.Columns("ProviderWarning")
            Me.columnCaseName = MyBase.Columns("CaseName")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnCity = MyBase.Columns("City")
            Me.columnState = MyBase.Columns("State")
            Me.columnZip = MyBase.Columns("Zip")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnInt1 = MyBase.Columns("Int1")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnSocSec = MyBase.Columns("SocSec")
            Me.columnSex = MyBase.Columns("Sex")
            Me.columnMaritalStat = MyBase.Columns("MaritalStat")
            Me.columnRace = MyBase.Columns("Race")
            Me.columnPriorCase = MyBase.Columns("PriorCase")
            Me.columnPriorPerNumber = MyBase.Columns("PriorPerNumber")
            Me.columnAlienType = MyBase.Columns("AlienType")
            Me.columnEntryDate = MyBase.Columns("EntryDate")
            Me.columnEligSeg = MyBase.Columns("EligSeg")
            Me.columnEffDate1 = MyBase.Columns("EffDate1")
            Me.columnTermDate1 = MyBase.Columns("TermDate1")
            Me.columnAddCode1 = MyBase.Columns("AddCode1")
            Me.columnTRMCode1 = MyBase.Columns("TRMCode1")
            Me.columnPGM1 = MyBase.Columns("PGM1")
            Me.columnSUPV1 = MyBase.Columns("SUPV1")
            Me.columnRES1 = MyBase.Columns("RES1")
            Me.columnExtType1 = MyBase.Columns("ExtType1")
            Me.columnPregDuedate1 = MyBase.Columns("PregDuedate1")
            Me.columnEffDate2 = MyBase.Columns("EffDate2")
            Me.columnTermDate2 = MyBase.Columns("TermDate2")
            Me.columnAddCode2 = MyBase.Columns("AddCode2")
            Me.columnTRMCode2 = MyBase.Columns("TRMCode2")
            Me.columnPGM2 = MyBase.Columns("PGM2")
            Me.columnSUPV2 = MyBase.Columns("SUPV2")
            Me.columnRES2 = MyBase.Columns("RES2")
            Me.columnExtType2 = MyBase.Columns("ExtType2")
            Me.columnPregDuedate2 = MyBase.Columns("PregDuedate2")
            Me.columnEffDate3 = MyBase.Columns("EffDate3")
            Me.columnTermDate3 = MyBase.Columns("TermDate3")
            Me.columnAddCode3 = MyBase.Columns("AddCode3")
            Me.columnTRMCode3 = MyBase.Columns("TRMCode3")
            Me.columnPGM3 = MyBase.Columns("PGM3")
            Me.columnSUPV3 = MyBase.Columns("SUPV3")
            Me.columnRES3 = MyBase.Columns("RES3")
            Me.columnExtType3 = MyBase.Columns("ExtType3")
            Me.columnPregDuedate3 = MyBase.Columns("PregDuedate3")
            Me.columnEffDate4 = MyBase.Columns("EffDate4")
            Me.columnTermDate4 = MyBase.Columns("TermDate4")
            Me.columnAddCode4 = MyBase.Columns("AddCode4")
            Me.columnTRMCode4 = MyBase.Columns("TRMCode4")
            Me.columnPGM4 = MyBase.Columns("PGM4")
            Me.columnSUPV4 = MyBase.Columns("SUPV4")
            Me.columnRES4 = MyBase.Columns("RES4")
            Me.columnExtType4 = MyBase.Columns("ExtType4")
            Me.columnPregDuedate4 = MyBase.Columns("PregDuedate4")
            Me.columnEffDate5 = MyBase.Columns("EffDate5")
            Me.columnTermDate5 = MyBase.Columns("TermDate5")
            Me.columnAddCode5 = MyBase.Columns("AddCode5")
            Me.columnTRMCode5 = MyBase.Columns("TRMCode5")
            Me.columnPGM5 = MyBase.Columns("PGM5")
            Me.columnSUPV5 = MyBase.Columns("SUPV5")
            Me.columnRES5 = MyBase.Columns("RES5")
            Me.columnExtType5 = MyBase.Columns("ExtType5")
            Me.columnPregDuedate5 = MyBase.Columns("PregDuedate5")
            Me.columnEffDate6 = MyBase.Columns("EffDate6")
            Me.columnTermDate6 = MyBase.Columns("TermDate6")
            Me.columnAddCode6 = MyBase.Columns("AddCode6")
            Me.columnTRMCode6 = MyBase.Columns("TRMCode6")
            Me.columnPGM6 = MyBase.Columns("PGM6")
            Me.columnSUPV6 = MyBase.Columns("SUPV6")
            Me.columnRES6 = MyBase.Columns("RES6")
            Me.columnExtType6 = MyBase.Columns("ExtType6")
            Me.columnPregDuedate6 = MyBase.Columns("PregDuedate6")
            Me.columnAddressAction = MyBase.Columns("AddressAction")
            Me.columnPersonAction = MyBase.Columns("PersonAction")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnBatchNumber = New Global.System.Data.DataColumn("BatchNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchNumber)
            Me.columnActionCode = New Global.System.Data.DataColumn("ActionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActionCode)
            Me.columnOffice = New Global.System.Data.DataColumn("Office", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOffice)
            Me.columnProviderWarning = New Global.System.Data.DataColumn("ProviderWarning", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProviderWarning)
            Me.columnCaseName = New Global.System.Data.DataColumn("CaseName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseName)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.columnState = New Global.System.Data.DataColumn("State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnState)
            Me.columnZip = New Global.System.Data.DataColumn("Zip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZip)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnInt1 = New Global.System.Data.DataColumn("Int1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInt1)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnSocSec = New Global.System.Data.DataColumn("SocSec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSocSec)
            Me.columnSex = New Global.System.Data.DataColumn("Sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSex)
            Me.columnMaritalStat = New Global.System.Data.DataColumn("MaritalStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaritalStat)
            Me.columnRace = New Global.System.Data.DataColumn("Race", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRace)
            Me.columnPriorCase = New Global.System.Data.DataColumn("PriorCase", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorCase)
            Me.columnPriorPerNumber = New Global.System.Data.DataColumn("PriorPerNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriorPerNumber)
            Me.columnAlienType = New Global.System.Data.DataColumn("AlienType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlienType)
            Me.columnEntryDate = New Global.System.Data.DataColumn("EntryDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntryDate)
            Me.columnEligSeg = New Global.System.Data.DataColumn("EligSeg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEligSeg)
            Me.columnEffDate1 = New Global.System.Data.DataColumn("EffDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate1)
            Me.columnTermDate1 = New Global.System.Data.DataColumn("TermDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate1)
            Me.columnAddCode1 = New Global.System.Data.DataColumn("AddCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode1)
            Me.columnTRMCode1 = New Global.System.Data.DataColumn("TRMCode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode1)
            Me.columnPGM1 = New Global.System.Data.DataColumn("PGM1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM1)
            Me.columnSUPV1 = New Global.System.Data.DataColumn("SUPV1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV1)
            Me.columnRES1 = New Global.System.Data.DataColumn("RES1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES1)
            Me.columnExtType1 = New Global.System.Data.DataColumn("ExtType1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType1)
            Me.columnPregDuedate1 = New Global.System.Data.DataColumn("PregDuedate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate1)
            Me.columnEffDate2 = New Global.System.Data.DataColumn("EffDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate2)
            Me.columnTermDate2 = New Global.System.Data.DataColumn("TermDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate2)
            Me.columnAddCode2 = New Global.System.Data.DataColumn("AddCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode2)
            Me.columnTRMCode2 = New Global.System.Data.DataColumn("TRMCode2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode2)
            Me.columnPGM2 = New Global.System.Data.DataColumn("PGM2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM2)
            Me.columnSUPV2 = New Global.System.Data.DataColumn("SUPV2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV2)
            Me.columnRES2 = New Global.System.Data.DataColumn("RES2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES2)
            Me.columnExtType2 = New Global.System.Data.DataColumn("ExtType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType2)
            Me.columnPregDuedate2 = New Global.System.Data.DataColumn("PregDuedate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate2)
            Me.columnEffDate3 = New Global.System.Data.DataColumn("EffDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate3)
            Me.columnTermDate3 = New Global.System.Data.DataColumn("TermDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate3)
            Me.columnAddCode3 = New Global.System.Data.DataColumn("AddCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode3)
            Me.columnTRMCode3 = New Global.System.Data.DataColumn("TRMCode3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode3)
            Me.columnPGM3 = New Global.System.Data.DataColumn("PGM3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM3)
            Me.columnSUPV3 = New Global.System.Data.DataColumn("SUPV3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV3)
            Me.columnRES3 = New Global.System.Data.DataColumn("RES3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES3)
            Me.columnExtType3 = New Global.System.Data.DataColumn("ExtType3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType3)
            Me.columnPregDuedate3 = New Global.System.Data.DataColumn("PregDuedate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate3)
            Me.columnEffDate4 = New Global.System.Data.DataColumn("EffDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate4)
            Me.columnTermDate4 = New Global.System.Data.DataColumn("TermDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate4)
            Me.columnAddCode4 = New Global.System.Data.DataColumn("AddCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode4)
            Me.columnTRMCode4 = New Global.System.Data.DataColumn("TRMCode4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode4)
            Me.columnPGM4 = New Global.System.Data.DataColumn("PGM4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM4)
            Me.columnSUPV4 = New Global.System.Data.DataColumn("SUPV4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV4)
            Me.columnRES4 = New Global.System.Data.DataColumn("RES4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES4)
            Me.columnExtType4 = New Global.System.Data.DataColumn("ExtType4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType4)
            Me.columnPregDuedate4 = New Global.System.Data.DataColumn("PregDuedate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate4)
            Me.columnEffDate5 = New Global.System.Data.DataColumn("EffDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate5)
            Me.columnTermDate5 = New Global.System.Data.DataColumn("TermDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate5)
            Me.columnAddCode5 = New Global.System.Data.DataColumn("AddCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode5)
            Me.columnTRMCode5 = New Global.System.Data.DataColumn("TRMCode5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode5)
            Me.columnPGM5 = New Global.System.Data.DataColumn("PGM5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM5)
            Me.columnSUPV5 = New Global.System.Data.DataColumn("SUPV5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV5)
            Me.columnRES5 = New Global.System.Data.DataColumn("RES5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES5)
            Me.columnExtType5 = New Global.System.Data.DataColumn("ExtType5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType5)
            Me.columnPregDuedate5 = New Global.System.Data.DataColumn("PregDuedate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate5)
            Me.columnEffDate6 = New Global.System.Data.DataColumn("EffDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffDate6)
            Me.columnTermDate6 = New Global.System.Data.DataColumn("TermDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTermDate6)
            Me.columnAddCode6 = New Global.System.Data.DataColumn("AddCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddCode6)
            Me.columnTRMCode6 = New Global.System.Data.DataColumn("TRMCode6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRMCode6)
            Me.columnPGM6 = New Global.System.Data.DataColumn("PGM6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPGM6)
            Me.columnSUPV6 = New Global.System.Data.DataColumn("SUPV6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUPV6)
            Me.columnRES6 = New Global.System.Data.DataColumn("RES6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES6)
            Me.columnExtType6 = New Global.System.Data.DataColumn("ExtType6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtType6)
            Me.columnPregDuedate6 = New Global.System.Data.DataColumn("PregDuedate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPregDuedate6)
            Me.columnAddressAction = New Global.System.Data.DataColumn("AddressAction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddressAction)
            Me.columnPersonAction = New Global.System.Data.DataColumn("PersonAction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonAction)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 2
            Me.columnBatchNumber.MaxLength = 4
            Me.columnActionCode.MaxLength = 1
            Me.columnOffice.MaxLength = 4
            Me.columnProviderWarning.MaxLength = 1
            Me.columnCaseName.MaxLength = 24
            Me.columnAddress.MaxLength = 20
            Me.columnCity.MaxLength = 18
            Me.columnState.MaxLength = 2
            Me.columnZip.MaxLength = 5
            Me.columnLastName.MaxLength = 12
            Me.columnFirstName.MaxLength = 9
            Me.columnInt1.MaxLength = 1
            Me.columnDateOfBirth.MaxLength = 8
            Me.columnSocSec.MaxLength = 9
            Me.columnSex.MaxLength = 1
            Me.columnMaritalStat.MaxLength = 1
            Me.columnRace.MaxLength = 1
            Me.columnPriorCase.MaxLength = 10
            Me.columnPriorPerNumber.MaxLength = 2
            Me.columnAlienType.MaxLength = 1
            Me.columnEntryDate.MaxLength = 8
            Me.columnEligSeg.MaxLength = 1
            Me.columnEffDate1.MaxLength = 8
            Me.columnTermDate1.MaxLength = 8
            Me.columnAddCode1.MaxLength = 2
            Me.columnTRMCode1.MaxLength = 2
            Me.columnPGM1.MaxLength = 3
            Me.columnSUPV1.MaxLength = 3
            Me.columnRES1.MaxLength = 3
            Me.columnExtType1.MaxLength = 1
            Me.columnPregDuedate1.MaxLength = 8
            Me.columnEffDate2.MaxLength = 8
            Me.columnTermDate2.MaxLength = 8
            Me.columnAddCode2.MaxLength = 2
            Me.columnTRMCode2.MaxLength = 2
            Me.columnPGM2.MaxLength = 3
            Me.columnSUPV2.MaxLength = 3
            Me.columnRES2.MaxLength = 3
            Me.columnExtType2.MaxLength = 1
            Me.columnPregDuedate2.MaxLength = 8
            Me.columnEffDate3.MaxLength = 8
            Me.columnTermDate3.MaxLength = 8
            Me.columnAddCode3.MaxLength = 2
            Me.columnTRMCode3.MaxLength = 2
            Me.columnPGM3.MaxLength = 3
            Me.columnSUPV3.MaxLength = 3
            Me.columnRES3.MaxLength = 3
            Me.columnExtType3.MaxLength = 1
            Me.columnPregDuedate3.MaxLength = 8
            Me.columnEffDate4.MaxLength = 8
            Me.columnTermDate4.MaxLength = 8
            Me.columnAddCode4.MaxLength = 2
            Me.columnTRMCode4.MaxLength = 2
            Me.columnPGM4.MaxLength = 3
            Me.columnSUPV4.MaxLength = 3
            Me.columnRES4.MaxLength = 3
            Me.columnExtType4.MaxLength = 1
            Me.columnPregDuedate4.MaxLength = 8
            Me.columnEffDate5.MaxLength = 8
            Me.columnTermDate5.MaxLength = 8
            Me.columnAddCode5.MaxLength = 2
            Me.columnTRMCode5.MaxLength = 2
            Me.columnPGM5.MaxLength = 3
            Me.columnSUPV5.MaxLength = 3
            Me.columnRES5.MaxLength = 3
            Me.columnExtType5.MaxLength = 1
            Me.columnPregDuedate5.MaxLength = 8
            Me.columnEffDate6.MaxLength = 8
            Me.columnTermDate6.MaxLength = 8
            Me.columnAddCode6.MaxLength = 2
            Me.columnTRMCode6.MaxLength = 2
            Me.columnPGM6.MaxLength = 3
            Me.columnSUPV6.MaxLength = 3
            Me.columnRES6.MaxLength = 3
            Me.columnExtType6.MaxLength = 1
            Me.columnPregDuedate6.MaxLength = 8
            Me.columnAddressAction.MaxLength = 1
            Me.columnPersonAction.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOPS61Row() As OPS61Row
            Return CType(Me.NewRow,OPS61Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPS61Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPS61Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPS61RowChangedEvent) Is Nothing) Then
                RaiseEvent OPS61RowChanged(Me, New OPS61RowChangeEvent(CType(e.Row,OPS61Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPS61RowChangingEvent) Is Nothing) Then
                RaiseEvent OPS61RowChanging(Me, New OPS61RowChangeEvent(CType(e.Row,OPS61Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPS61RowDeletedEvent) Is Nothing) Then
                RaiseEvent OPS61RowDeleted(Me, New OPS61RowChangeEvent(CType(e.Row,OPS61Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPS61RowDeletingEvent) Is Nothing) Then
                RaiseEvent OPS61RowDeleting(Me, New OPS61RowChangeEvent(CType(e.Row,OPS61Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOPS61Row(ByVal row As OPS61Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPS61DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPS64DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnBatchNumber As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnActionCode As Global.System.Data.DataColumn
        
        Private columnProgramNumber1 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate1 As Global.System.Data.DataColumn
        
        Private columnTerminationDate1 As Global.System.Data.DataColumn
        
        Private columnProgramNumber2 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate2 As Global.System.Data.DataColumn
        
        Private columnTerminationDate2 As Global.System.Data.DataColumn
        
        Private columnProgramNumber3 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate3 As Global.System.Data.DataColumn
        
        Private columnTerminationDate3 As Global.System.Data.DataColumn
        
        Private columnProgramNumber4 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate4 As Global.System.Data.DataColumn
        
        Private columnTerminationDate4 As Global.System.Data.DataColumn
        
        Private columnProgramNumber5 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate5 As Global.System.Data.DataColumn
        
        Private columnTerminationDate5 As Global.System.Data.DataColumn
        
        Private columnProgramNumber6 As Global.System.Data.DataColumn
        
        Private columnEffectiveDate6 As Global.System.Data.DataColumn
        
        Private columnTerminationDate6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPS64"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BatchNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramNumber6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramNumber6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EffectiveDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEffectiveDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TerminationDate6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTerminationDate6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPS64Row
            Get
                Return CType(Me.Rows(index),OPS64Row)
            End Get
        End Property
        
        Public Event OPS64RowChanging As OPS64RowChangeEventHandler
        
        Public Event OPS64RowChanged As OPS64RowChangeEventHandler
        
        Public Event OPS64RowDeleting As OPS64RowChangeEventHandler
        
        Public Event OPS64RowDeleted As OPS64RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOPS64Row(ByVal row As OPS64Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOPS64Row( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal BatchNumber As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal ActionCode As String,  _
                    ByVal ProgramNumber1 As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal ProgramNumber2 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal ProgramNumber3 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal ProgramNumber4 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal ProgramNumber5 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal ProgramNumber6 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String) As OPS64Row
            Dim rowOPS64Row As OPS64Row = CType(Me.NewRow,OPS64Row)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PersonNumber, BatchNumber, LastName, FirstName, DateOfBirth, ActionCode, ProgramNumber1, EffectiveDate1, TerminationDate1, ProgramNumber2, EffectiveDate2, TerminationDate2, ProgramNumber3, EffectiveDate3, TerminationDate3, ProgramNumber4, EffectiveDate4, TerminationDate4, ProgramNumber5, EffectiveDate5, TerminationDate5, ProgramNumber6, EffectiveDate6, TerminationDate6}
            rowOPS64Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPS64Row)
            Return rowOPS64Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPS64DataTable = CType(MyBase.Clone,OPS64DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPS64DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnBatchNumber = MyBase.Columns("BatchNumber")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnActionCode = MyBase.Columns("ActionCode")
            Me.columnProgramNumber1 = MyBase.Columns("ProgramNumber1")
            Me.columnEffectiveDate1 = MyBase.Columns("EffectiveDate1")
            Me.columnTerminationDate1 = MyBase.Columns("TerminationDate1")
            Me.columnProgramNumber2 = MyBase.Columns("ProgramNumber2")
            Me.columnEffectiveDate2 = MyBase.Columns("EffectiveDate2")
            Me.columnTerminationDate2 = MyBase.Columns("TerminationDate2")
            Me.columnProgramNumber3 = MyBase.Columns("ProgramNumber3")
            Me.columnEffectiveDate3 = MyBase.Columns("EffectiveDate3")
            Me.columnTerminationDate3 = MyBase.Columns("TerminationDate3")
            Me.columnProgramNumber4 = MyBase.Columns("ProgramNumber4")
            Me.columnEffectiveDate4 = MyBase.Columns("EffectiveDate4")
            Me.columnTerminationDate4 = MyBase.Columns("TerminationDate4")
            Me.columnProgramNumber5 = MyBase.Columns("ProgramNumber5")
            Me.columnEffectiveDate5 = MyBase.Columns("EffectiveDate5")
            Me.columnTerminationDate5 = MyBase.Columns("TerminationDate5")
            Me.columnProgramNumber6 = MyBase.Columns("ProgramNumber6")
            Me.columnEffectiveDate6 = MyBase.Columns("EffectiveDate6")
            Me.columnTerminationDate6 = MyBase.Columns("TerminationDate6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnBatchNumber = New Global.System.Data.DataColumn("BatchNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchNumber)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnActionCode = New Global.System.Data.DataColumn("ActionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActionCode)
            Me.columnProgramNumber1 = New Global.System.Data.DataColumn("ProgramNumber1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber1)
            Me.columnEffectiveDate1 = New Global.System.Data.DataColumn("EffectiveDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate1)
            Me.columnTerminationDate1 = New Global.System.Data.DataColumn("TerminationDate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate1)
            Me.columnProgramNumber2 = New Global.System.Data.DataColumn("ProgramNumber2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber2)
            Me.columnEffectiveDate2 = New Global.System.Data.DataColumn("EffectiveDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate2)
            Me.columnTerminationDate2 = New Global.System.Data.DataColumn("TerminationDate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate2)
            Me.columnProgramNumber3 = New Global.System.Data.DataColumn("ProgramNumber3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber3)
            Me.columnEffectiveDate3 = New Global.System.Data.DataColumn("EffectiveDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate3)
            Me.columnTerminationDate3 = New Global.System.Data.DataColumn("TerminationDate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate3)
            Me.columnProgramNumber4 = New Global.System.Data.DataColumn("ProgramNumber4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber4)
            Me.columnEffectiveDate4 = New Global.System.Data.DataColumn("EffectiveDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate4)
            Me.columnTerminationDate4 = New Global.System.Data.DataColumn("TerminationDate4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate4)
            Me.columnProgramNumber5 = New Global.System.Data.DataColumn("ProgramNumber5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber5)
            Me.columnEffectiveDate5 = New Global.System.Data.DataColumn("EffectiveDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate5)
            Me.columnTerminationDate5 = New Global.System.Data.DataColumn("TerminationDate5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate5)
            Me.columnProgramNumber6 = New Global.System.Data.DataColumn("ProgramNumber6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramNumber6)
            Me.columnEffectiveDate6 = New Global.System.Data.DataColumn("EffectiveDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEffectiveDate6)
            Me.columnTerminationDate6 = New Global.System.Data.DataColumn("TerminationDate6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTerminationDate6)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 2
            Me.columnBatchNumber.MaxLength = 4
            Me.columnLastName.MaxLength = 12
            Me.columnFirstName.MaxLength = 9
            Me.columnDateOfBirth.MaxLength = 8
            Me.columnActionCode.MaxLength = 1
            Me.columnProgramNumber1.MaxLength = 2
            Me.columnEffectiveDate1.MaxLength = 8
            Me.columnTerminationDate1.MaxLength = 8
            Me.columnProgramNumber2.MaxLength = 2
            Me.columnEffectiveDate2.MaxLength = 8
            Me.columnTerminationDate2.MaxLength = 8
            Me.columnProgramNumber3.MaxLength = 2
            Me.columnEffectiveDate3.MaxLength = 8
            Me.columnTerminationDate3.MaxLength = 8
            Me.columnProgramNumber4.MaxLength = 2
            Me.columnEffectiveDate4.MaxLength = 8
            Me.columnTerminationDate4.MaxLength = 8
            Me.columnProgramNumber5.MaxLength = 2
            Me.columnEffectiveDate5.MaxLength = 8
            Me.columnTerminationDate5.MaxLength = 8
            Me.columnProgramNumber6.MaxLength = 2
            Me.columnEffectiveDate6.MaxLength = 8
            Me.columnTerminationDate6.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOPS64Row() As OPS64Row
            Return CType(Me.NewRow,OPS64Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPS64Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPS64Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPS64RowChangedEvent) Is Nothing) Then
                RaiseEvent OPS64RowChanged(Me, New OPS64RowChangeEvent(CType(e.Row,OPS64Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPS64RowChangingEvent) Is Nothing) Then
                RaiseEvent OPS64RowChanging(Me, New OPS64RowChangeEvent(CType(e.Row,OPS64Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPS64RowDeletedEvent) Is Nothing) Then
                RaiseEvent OPS64RowDeleted(Me, New OPS64RowChangeEvent(CType(e.Row,OPS64Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPS64RowDeletingEvent) Is Nothing) Then
                RaiseEvent OPS64RowDeleting(Me, New OPS64RowChangeEvent(CType(e.Row,OPS64Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOPS64Row(ByVal row As OPS64Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPS64DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OPS66DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnBatchNumber As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnDateOfBirth As Global.System.Data.DataColumn
        
        Private columnActionCode As Global.System.Data.DataColumn
        
        Private columnSupv As Global.System.Data.DataColumn
        
        Private columnWorker As Global.System.Data.DataColumn
        
        Private columnProgramStatus As Global.System.Data.DataColumn
        
        Private columnCaseRedeterminationDate As Global.System.Data.DataColumn
        
        Private columnDisabilityRedeterminationDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OPS66"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BatchNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBatchNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ActionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SupvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WorkerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProgramStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProgramStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseRedeterminationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseRedeterminationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DisabilityRedeterminationDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisabilityRedeterminationDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OPS66Row
            Get
                Return CType(Me.Rows(index),OPS66Row)
            End Get
        End Property
        
        Public Event OPS66RowChanging As OPS66RowChangeEventHandler
        
        Public Event OPS66RowChanged As OPS66RowChangeEventHandler
        
        Public Event OPS66RowDeleting As OPS66RowChangeEventHandler
        
        Public Event OPS66RowDeleted As OPS66RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddOPS66Row(ByVal row As OPS66Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddOPS66Row(ByVal CaseNumber As String, ByVal PersonNumber As String, ByVal BatchNumber As String, ByVal LastName As String, ByVal FirstName As String, ByVal DateOfBirth As String, ByVal ActionCode As String, ByVal Supv As String, ByVal Worker As String, ByVal ProgramStatus As String, ByVal CaseRedeterminationDate As String, ByVal DisabilityRedeterminationDate As String) As OPS66Row
            Dim rowOPS66Row As OPS66Row = CType(Me.NewRow,OPS66Row)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, PersonNumber, BatchNumber, LastName, FirstName, DateOfBirth, ActionCode, Supv, Worker, ProgramStatus, CaseRedeterminationDate, DisabilityRedeterminationDate}
            rowOPS66Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowOPS66Row)
            Return rowOPS66Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OPS66DataTable = CType(MyBase.Clone,OPS66DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OPS66DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnBatchNumber = MyBase.Columns("BatchNumber")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnDateOfBirth = MyBase.Columns("DateOfBirth")
            Me.columnActionCode = MyBase.Columns("ActionCode")
            Me.columnSupv = MyBase.Columns("Supv")
            Me.columnWorker = MyBase.Columns("Worker")
            Me.columnProgramStatus = MyBase.Columns("ProgramStatus")
            Me.columnCaseRedeterminationDate = MyBase.Columns("CaseRedeterminationDate")
            Me.columnDisabilityRedeterminationDate = MyBase.Columns("DisabilityRedeterminationDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnBatchNumber = New Global.System.Data.DataColumn("BatchNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBatchNumber)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnDateOfBirth = New Global.System.Data.DataColumn("DateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfBirth)
            Me.columnActionCode = New Global.System.Data.DataColumn("ActionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActionCode)
            Me.columnSupv = New Global.System.Data.DataColumn("Supv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupv)
            Me.columnWorker = New Global.System.Data.DataColumn("Worker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorker)
            Me.columnProgramStatus = New Global.System.Data.DataColumn("ProgramStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProgramStatus)
            Me.columnCaseRedeterminationDate = New Global.System.Data.DataColumn("CaseRedeterminationDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseRedeterminationDate)
            Me.columnDisabilityRedeterminationDate = New Global.System.Data.DataColumn("DisabilityRedeterminationDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisabilityRedeterminationDate)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 2
            Me.columnBatchNumber.MaxLength = 4
            Me.columnLastName.MaxLength = 12
            Me.columnFirstName.MaxLength = 9
            Me.columnDateOfBirth.MaxLength = 8
            Me.columnActionCode.MaxLength = 1
            Me.columnSupv.MaxLength = 2
            Me.columnWorker.MaxLength = 2
            Me.columnProgramStatus.MaxLength = 3
            Me.columnCaseRedeterminationDate.MaxLength = 8
            Me.columnDisabilityRedeterminationDate.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewOPS66Row() As OPS66Row
            Return CType(Me.NewRow,OPS66Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OPS66Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OPS66Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OPS66RowChangedEvent) Is Nothing) Then
                RaiseEvent OPS66RowChanged(Me, New OPS66RowChangeEvent(CType(e.Row,OPS66Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OPS66RowChangingEvent) Is Nothing) Then
                RaiseEvent OPS66RowChanging(Me, New OPS66RowChangeEvent(CType(e.Row,OPS66Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OPS66RowDeletedEvent) Is Nothing) Then
                RaiseEvent OPS66RowDeleted(Me, New OPS66RowChangeEvent(CType(e.Row,OPS66Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OPS66RowDeletingEvent) Is Nothing) Then
                RaiseEvent OPS66RowDeleting(Me, New OPS66RowChangeEvent(CType(e.Row,OPS66Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveOPS66Row(ByVal row As OPS66Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OPS66DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TransactionLogDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCaseNumber As Global.System.Data.DataColumn
        
        Private columnTextFile As Global.System.Data.DataColumn
        
        Private columnDateEntered As Global.System.Data.DataColumn
        
        Private columnOperator As Global.System.Data.DataColumn
        
        Private columnOps As Global.System.Data.DataColumn
        
        Private columnPersonNumber As Global.System.Data.DataColumn
        
        Private columnResult As Global.System.Data.DataColumn
        
        Private columnReason As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TransactionLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CaseNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCaseNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TextFileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTextFile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateEnteredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateEntered
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperatorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperator
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OpsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOps
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PersonNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TransactionLogRow
            Get
                Return CType(Me.Rows(index),TransactionLogRow)
            End Get
        End Property
        
        Public Event TransactionLogRowChanging As TransactionLogRowChangeEventHandler
        
        Public Event TransactionLogRowChanged As TransactionLogRowChangeEventHandler
        
        Public Event TransactionLogRowDeleting As TransactionLogRowChangeEventHandler
        
        Public Event TransactionLogRowDeleted As TransactionLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTransactionLogRow(ByVal row As TransactionLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTransactionLogRow(ByVal CaseNumber As String, ByVal TextFile As String, ByVal DateEntered As Date, ByVal _Operator As String, ByVal Ops As String, ByVal PersonNumber As String, ByVal Result As String, ByVal Reason As String) As TransactionLogRow
            Dim rowTransactionLogRow As TransactionLogRow = CType(Me.NewRow,TransactionLogRow)
            Dim columnValuesArray() As Object = New Object() {CaseNumber, TextFile, DateEntered, _Operator, Ops, PersonNumber, Result, Reason}
            rowTransactionLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTransactionLogRow)
            Return rowTransactionLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TransactionLogDataTable = CType(MyBase.Clone,TransactionLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TransactionLogDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCaseNumber = MyBase.Columns("CaseNumber")
            Me.columnTextFile = MyBase.Columns("TextFile")
            Me.columnDateEntered = MyBase.Columns("DateEntered")
            Me.columnOperator = MyBase.Columns("Operator")
            Me.columnOps = MyBase.Columns("Ops")
            Me.columnPersonNumber = MyBase.Columns("PersonNumber")
            Me.columnResult = MyBase.Columns("Result")
            Me.columnReason = MyBase.Columns("Reason")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCaseNumber = New Global.System.Data.DataColumn("CaseNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCaseNumber)
            Me.columnTextFile = New Global.System.Data.DataColumn("TextFile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTextFile)
            Me.columnDateEntered = New Global.System.Data.DataColumn("DateEntered", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateEntered)
            Me.columnOperator = New Global.System.Data.DataColumn("Operator", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnOperator.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "OperatorColumn")
            Me.columnOperator.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnOperator")
            Me.columnOperator.ExtendedProperties.Add("Generator_UserColumnName", "Operator")
            MyBase.Columns.Add(Me.columnOperator)
            Me.columnOps = New Global.System.Data.DataColumn("Ops", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOps)
            Me.columnPersonNumber = New Global.System.Data.DataColumn("PersonNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonNumber)
            Me.columnResult = New Global.System.Data.DataColumn("Result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResult)
            Me.columnReason = New Global.System.Data.DataColumn("Reason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReason)
            Me.columnCaseNumber.MaxLength = 10
            Me.columnTextFile.MaxLength = 75
            Me.columnOperator.MaxLength = 10
            Me.columnOps.MaxLength = 10
            Me.columnPersonNumber.MaxLength = 10
            Me.columnResult.MaxLength = 10
            Me.columnReason.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTransactionLogRow() As TransactionLogRow
            Return CType(Me.NewRow,TransactionLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TransactionLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TransactionLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TransactionLogRowChangedEvent) Is Nothing) Then
                RaiseEvent TransactionLogRowChanged(Me, New TransactionLogRowChangeEvent(CType(e.Row,TransactionLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TransactionLogRowChangingEvent) Is Nothing) Then
                RaiseEvent TransactionLogRowChanging(Me, New TransactionLogRowChangeEvent(CType(e.Row,TransactionLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TransactionLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent TransactionLogRowDeleted(Me, New TransactionLogRowChangeEvent(CType(e.Row,TransactionLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TransactionLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent TransactionLogRowDeleting(Me, New TransactionLogRowChangeEvent(CType(e.Row,TransactionLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTransactionLogRow(ByVal row As TransactionLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As MedicaidDataSet = New MedicaidDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TransactionLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OPS31Row
        Inherits Global.System.Data.DataRow
        
        Private tableOPS31 As OPS31DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPS31 = CType(Me.Table,OPS31DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AppDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AppDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppDate' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AppDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ActionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ActionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActionCode' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ActionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Eligible() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EligibleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eligible' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EligibleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MiddleInitial() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.MiddleInitialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleInitial' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.MiddleInitialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.DateOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SocialSecurity() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.SocialSecurityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SocialSecurity' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.SocialSecurityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sex() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.SexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sex' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.SexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaritalStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.MaritalStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStatus' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.MaritalStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Race() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.RaceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Race' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.RaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PriorCaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PriorCaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriorCaseNumber' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PriorCaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PriorPersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PriorPersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriorPersonNumber' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PriorPersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ApplicationCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ApplicationCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApplicationCode' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ApplicationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.LTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LTC' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.LTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate1' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate2' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate3' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate4' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate5' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.EffectiveDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.EffectiveDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TerminationDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TerminationDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TypeCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TypeCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCode6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TypeCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.AddCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.AddCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.TermCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermCode6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.TermCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.ProgramStatus6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.ProgramStatus6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregnancyDueDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS31.PregnancyDueDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregnancyDueDate6' in table 'OPS31' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS31.PregnancyDueDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableOPS31.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableOPS31.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAppDateNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.AppDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAppDateNull()
            Me(Me.tableOPS31.AppDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.ActionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionCodeNull()
            Me(Me.tableOPS31.ActionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEligibleNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.EligibleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEligibleNull()
            Me(Me.tableOPS31.EligibleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableOPS31.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableOPS31.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMiddleInitialNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.MiddleInitialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMiddleInitialNull()
            Me(Me.tableOPS31.MiddleInitialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableOPS31.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSocialSecurityNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.SocialSecurityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSocialSecurityNull()
            Me(Me.tableOPS31.SocialSecurityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.SexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexNull()
            Me(Me.tableOPS31.SexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaritalStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.MaritalStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaritalStatusNull()
            Me(Me.tableOPS31.MaritalStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRaceNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.RaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRaceNull()
            Me(Me.tableOPS31.RaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPriorCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.PriorCaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPriorCaseNumberNull()
            Me(Me.tableOPS31.PriorCaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPriorPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.PriorPersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPriorPersonNumberNull()
            Me(Me.tableOPS31.PriorPersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsApplicationCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.ApplicationCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetApplicationCodeNull()
            Me(Me.tableOPS31.ApplicationCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLTCNull() As Boolean
            Return Me.IsNull(Me.tableOPS31.LTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLTCNull()
            Me(Me.tableOPS31.LTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate1Null()
            Me(Me.tableOPS31.EffectiveDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate1Null()
            Me(Me.tableOPS31.TerminationDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode1Null()
            Me(Me.tableOPS31.TypeCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode1Null()
            Me(Me.tableOPS31.AddCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode1Null()
            Me(Me.tableOPS31.TermCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus1Null()
            Me(Me.tableOPS31.ProgramStatus1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate1Null()
            Me(Me.tableOPS31.PregnancyDueDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate2Null()
            Me(Me.tableOPS31.EffectiveDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate2Null()
            Me(Me.tableOPS31.TerminationDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode2Null()
            Me(Me.tableOPS31.TypeCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode2Null()
            Me(Me.tableOPS31.AddCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode2Null()
            Me(Me.tableOPS31.TermCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus2Null()
            Me(Me.tableOPS31.ProgramStatus2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate2Null()
            Me(Me.tableOPS31.PregnancyDueDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate3Null()
            Me(Me.tableOPS31.EffectiveDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate3Null()
            Me(Me.tableOPS31.TerminationDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode3Null()
            Me(Me.tableOPS31.TypeCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode3Null()
            Me(Me.tableOPS31.AddCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode3Null()
            Me(Me.tableOPS31.TermCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus3Null()
            Me(Me.tableOPS31.ProgramStatus3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate3Null()
            Me(Me.tableOPS31.PregnancyDueDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate4Null()
            Me(Me.tableOPS31.EffectiveDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate4Null()
            Me(Me.tableOPS31.TerminationDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode4Null()
            Me(Me.tableOPS31.TypeCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode4Null()
            Me(Me.tableOPS31.AddCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode4Null()
            Me(Me.tableOPS31.TermCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus4Null()
            Me(Me.tableOPS31.ProgramStatus4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate4Null()
            Me(Me.tableOPS31.PregnancyDueDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate5Null()
            Me(Me.tableOPS31.EffectiveDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate5Null()
            Me(Me.tableOPS31.TerminationDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode5Null()
            Me(Me.tableOPS31.TypeCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode5Null()
            Me(Me.tableOPS31.AddCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode5Null()
            Me(Me.tableOPS31.TermCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus5Null()
            Me(Me.tableOPS31.ProgramStatus5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate5Null()
            Me(Me.tableOPS31.PregnancyDueDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.EffectiveDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate6Null()
            Me(Me.tableOPS31.EffectiveDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TerminationDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate6Null()
            Me(Me.tableOPS31.TerminationDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TypeCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeCode6Null()
            Me(Me.tableOPS31.TypeCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.AddCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode6Null()
            Me(Me.tableOPS31.AddCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.TermCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermCode6Null()
            Me(Me.tableOPS31.TermCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatus6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.ProgramStatus6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatus6Null()
            Me(Me.tableOPS31.ProgramStatus6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregnancyDueDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS31.PregnancyDueDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregnancyDueDate6Null()
            Me(Me.tableOPS31.PregnancyDueDate6Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OPS32Row
        Inherits Global.System.Data.DataRow
        
        Private tableOPS32 As OPS32DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPS32 = CType(Me.Table,OPS32DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.DateOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ActionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.ActionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActionCode' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.ActionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode1' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber1' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate1' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate1' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode2' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber2' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate2' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate2' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode3' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber3' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate3' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate3' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode4' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber4' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate4' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate4' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode5' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber5' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate5' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate5' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsuranceCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsuranceCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsuranceCode6' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsuranceCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InsurancePolicyNumber6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.InsurancePolicyNumber6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsurancePolicyNumber6' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.InsurancePolicyNumber6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.EffectiveDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate6' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.EffectiveDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS32.TerminationDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate6' in table 'OPS32' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS32.TerminationDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableOPS32.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableOPS32.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableOPS32.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableOPS32.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableOPS32.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS32.ActionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionCodeNull()
            Me(Me.tableOPS32.ActionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode1Null()
            Me(Me.tableOPS32.InsuranceCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber1Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber1Null()
            Me(Me.tableOPS32.InsurancePolicyNumber1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate1Null()
            Me(Me.tableOPS32.EffectiveDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate1Null()
            Me(Me.tableOPS32.TerminationDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode2Null()
            Me(Me.tableOPS32.InsuranceCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber2Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber2Null()
            Me(Me.tableOPS32.InsurancePolicyNumber2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate2Null()
            Me(Me.tableOPS32.EffectiveDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate2Null()
            Me(Me.tableOPS32.TerminationDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode3Null()
            Me(Me.tableOPS32.InsuranceCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber3Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber3Null()
            Me(Me.tableOPS32.InsurancePolicyNumber3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate3Null()
            Me(Me.tableOPS32.EffectiveDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate3Null()
            Me(Me.tableOPS32.TerminationDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode4Null()
            Me(Me.tableOPS32.InsuranceCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber4Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber4Null()
            Me(Me.tableOPS32.InsurancePolicyNumber4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate4Null()
            Me(Me.tableOPS32.EffectiveDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate4Null()
            Me(Me.tableOPS32.TerminationDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode5Null()
            Me(Me.tableOPS32.InsuranceCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber5Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber5Null()
            Me(Me.tableOPS32.InsurancePolicyNumber5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate5Null()
            Me(Me.tableOPS32.EffectiveDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate5Null()
            Me(Me.tableOPS32.TerminationDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsuranceCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsuranceCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsuranceCode6Null()
            Me(Me.tableOPS32.InsuranceCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInsurancePolicyNumber6Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.InsurancePolicyNumber6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInsurancePolicyNumber6Null()
            Me(Me.tableOPS32.InsurancePolicyNumber6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.EffectiveDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate6Null()
            Me(Me.tableOPS32.EffectiveDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS32.TerminationDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate6Null()
            Me(Me.tableOPS32.TerminationDate6Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OPS61Row
        Inherits Global.System.Data.DataRow
        
        Private tableOPS61 As OPS61DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPS61 = CType(Me.Table,OPS61DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BatchNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.BatchNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchNumber' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.BatchNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ActionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ActionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActionCode' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ActionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Office() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.OfficeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Office' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.OfficeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProviderWarning() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ProviderWarningColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProviderWarning' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ProviderWarningColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.CaseNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseName' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.CaseNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property City() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.CityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.CityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property State() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'State' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Zip() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ZipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Zip' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ZipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Int1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.Int1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Int1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.Int1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.DateOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SocSec() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SocSecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SocSec' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SocSecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sex() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sex' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaritalStat() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.MaritalStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaritalStat' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.MaritalStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Race() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RaceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Race' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RaceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PriorCase() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PriorCaseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriorCase' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PriorCaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PriorPerNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PriorPerNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriorPerNumber' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PriorPerNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AlienType() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AlienTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlienType' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AlienTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EntryDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EntryDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntryDate' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EntryDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EligSeg() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EligSegColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EligSeg' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EligSegColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate1' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate2' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate3' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate4' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate5' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.EffDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffDate6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.EffDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TermDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TermDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TermDate6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TermDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddCode6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRMCode6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.TRMCode6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRMCode6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.TRMCode6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PGM6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PGM6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PGM6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PGM6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUPV6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.SUPV6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUPV6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.SUPV6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RES6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.RES6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.RES6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ExtType6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.ExtType6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExtType6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.ExtType6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PregDuedate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PregDuedate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PregDuedate6' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PregDuedate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AddressAction() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.AddressActionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddressAction' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.AddressActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonAction() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS61.PersonActionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonAction' in table 'OPS61' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS61.PersonActionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableOPS61.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableOPS61.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBatchNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.BatchNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBatchNumberNull()
            Me(Me.tableOPS61.BatchNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.ActionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionCodeNull()
            Me(Me.tableOPS61.ActionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOfficeNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.OfficeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOfficeNull()
            Me(Me.tableOPS61.OfficeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProviderWarningNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.ProviderWarningColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProviderWarningNull()
            Me(Me.tableOPS61.ProviderWarningColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.CaseNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNameNull()
            Me(Me.tableOPS61.CaseNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tableOPS61.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCityNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.CityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCityNull()
            Me(Me.tableOPS61.CityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStateNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStateNull()
            Me(Me.tableOPS61.StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsZipNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.ZipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetZipNull()
            Me(Me.tableOPS61.ZipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableOPS61.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableOPS61.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInt1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.Int1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInt1Null()
            Me(Me.tableOPS61.Int1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableOPS61.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSocSecNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.SocSecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSocSecNull()
            Me(Me.tableOPS61.SocSecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.SexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexNull()
            Me(Me.tableOPS61.SexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaritalStatNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.MaritalStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaritalStatNull()
            Me(Me.tableOPS61.MaritalStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRaceNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.RaceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRaceNull()
            Me(Me.tableOPS61.RaceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPriorCaseNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.PriorCaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPriorCaseNull()
            Me(Me.tableOPS61.PriorCaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPriorPerNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.PriorPerNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPriorPerNumberNull()
            Me(Me.tableOPS61.PriorPerNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAlienTypeNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.AlienTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAlienTypeNull()
            Me(Me.tableOPS61.AlienTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEntryDateNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.EntryDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEntryDateNull()
            Me(Me.tableOPS61.EntryDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEligSegNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.EligSegColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEligSegNull()
            Me(Me.tableOPS61.EligSegColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate1Null()
            Me(Me.tableOPS61.EffDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate1Null()
            Me(Me.tableOPS61.TermDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode1Null()
            Me(Me.tableOPS61.AddCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode1Null()
            Me(Me.tableOPS61.TRMCode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM1Null()
            Me(Me.tableOPS61.PGM1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV1Null()
            Me(Me.tableOPS61.SUPV1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES1Null()
            Me(Me.tableOPS61.RES1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType1Null()
            Me(Me.tableOPS61.ExtType1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate1Null()
            Me(Me.tableOPS61.PregDuedate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate2Null()
            Me(Me.tableOPS61.EffDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate2Null()
            Me(Me.tableOPS61.TermDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode2Null()
            Me(Me.tableOPS61.AddCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode2Null()
            Me(Me.tableOPS61.TRMCode2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM2Null()
            Me(Me.tableOPS61.PGM2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV2Null()
            Me(Me.tableOPS61.SUPV2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES2Null()
            Me(Me.tableOPS61.RES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType2Null()
            Me(Me.tableOPS61.ExtType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate2Null()
            Me(Me.tableOPS61.PregDuedate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate3Null()
            Me(Me.tableOPS61.EffDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate3Null()
            Me(Me.tableOPS61.TermDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode3Null()
            Me(Me.tableOPS61.AddCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode3Null()
            Me(Me.tableOPS61.TRMCode3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM3Null()
            Me(Me.tableOPS61.PGM3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV3Null()
            Me(Me.tableOPS61.SUPV3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES3Null()
            Me(Me.tableOPS61.RES3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType3Null()
            Me(Me.tableOPS61.ExtType3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate3Null()
            Me(Me.tableOPS61.PregDuedate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate4Null()
            Me(Me.tableOPS61.EffDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate4Null()
            Me(Me.tableOPS61.TermDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode4Null()
            Me(Me.tableOPS61.AddCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode4Null()
            Me(Me.tableOPS61.TRMCode4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM4Null()
            Me(Me.tableOPS61.PGM4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV4Null()
            Me(Me.tableOPS61.SUPV4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES4Null()
            Me(Me.tableOPS61.RES4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType4Null()
            Me(Me.tableOPS61.ExtType4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate4Null()
            Me(Me.tableOPS61.PregDuedate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate5Null()
            Me(Me.tableOPS61.EffDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate5Null()
            Me(Me.tableOPS61.TermDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode5Null()
            Me(Me.tableOPS61.AddCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode5Null()
            Me(Me.tableOPS61.TRMCode5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM5Null()
            Me(Me.tableOPS61.PGM5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV5Null()
            Me(Me.tableOPS61.SUPV5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES5Null()
            Me(Me.tableOPS61.RES5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType5Null()
            Me(Me.tableOPS61.ExtType5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate5Null()
            Me(Me.tableOPS61.PregDuedate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.EffDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffDate6Null()
            Me(Me.tableOPS61.EffDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTermDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TermDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTermDate6Null()
            Me(Me.tableOPS61.TermDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddCode6Null()
            Me(Me.tableOPS61.AddCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRMCode6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.TRMCode6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRMCode6Null()
            Me(Me.tableOPS61.TRMCode6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPGM6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PGM6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPGM6Null()
            Me(Me.tableOPS61.PGM6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUPV6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.SUPV6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUPV6Null()
            Me(Me.tableOPS61.SUPV6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRES6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.RES6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRES6Null()
            Me(Me.tableOPS61.RES6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExtType6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.ExtType6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExtType6Null()
            Me(Me.tableOPS61.ExtType6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPregDuedate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS61.PregDuedate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPregDuedate6Null()
            Me(Me.tableOPS61.PregDuedate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressActionNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.AddressActionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressActionNull()
            Me(Me.tableOPS61.AddressActionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonActionNull() As Boolean
            Return Me.IsNull(Me.tableOPS61.PersonActionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonActionNull()
            Me(Me.tableOPS61.PersonActionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OPS64Row
        Inherits Global.System.Data.DataRow
        
        Private tableOPS64 As OPS64DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPS64 = CType(Me.Table,OPS64DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BatchNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.BatchNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchNumber' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.BatchNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.DateOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ActionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ActionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActionCode' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ActionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber1' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate1' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate1() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate1' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber2' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate2' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate2() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate2' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber3' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate3' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate3() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate3' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber4' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate4' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate4() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate4' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber5' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate5' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate5() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate5' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramNumber6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.ProgramNumber6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramNumber6' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.ProgramNumber6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EffectiveDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.EffectiveDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EffectiveDate6' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.EffectiveDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TerminationDate6() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS64.TerminationDate6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TerminationDate6' in table 'OPS64' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS64.TerminationDate6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableOPS64.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableOPS64.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBatchNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.BatchNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBatchNumberNull()
            Me(Me.tableOPS64.BatchNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableOPS64.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableOPS64.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableOPS64.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS64.ActionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionCodeNull()
            Me(Me.tableOPS64.ActionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber1Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber1Null()
            Me(Me.tableOPS64.ProgramNumber1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate1Null()
            Me(Me.tableOPS64.EffectiveDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate1Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate1Null()
            Me(Me.tableOPS64.TerminationDate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber2Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber2Null()
            Me(Me.tableOPS64.ProgramNumber2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate2Null()
            Me(Me.tableOPS64.EffectiveDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate2Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate2Null()
            Me(Me.tableOPS64.TerminationDate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber3Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber3Null()
            Me(Me.tableOPS64.ProgramNumber3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate3Null()
            Me(Me.tableOPS64.EffectiveDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate3Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate3Null()
            Me(Me.tableOPS64.TerminationDate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber4Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber4Null()
            Me(Me.tableOPS64.ProgramNumber4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate4Null()
            Me(Me.tableOPS64.EffectiveDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate4Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate4Null()
            Me(Me.tableOPS64.TerminationDate4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber5Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber5Null()
            Me(Me.tableOPS64.ProgramNumber5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate5Null()
            Me(Me.tableOPS64.EffectiveDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate5Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate5Null()
            Me(Me.tableOPS64.TerminationDate5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramNumber6Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.ProgramNumber6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramNumber6Null()
            Me(Me.tableOPS64.ProgramNumber6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEffectiveDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.EffectiveDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEffectiveDate6Null()
            Me(Me.tableOPS64.EffectiveDate6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTerminationDate6Null() As Boolean
            Return Me.IsNull(Me.tableOPS64.TerminationDate6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTerminationDate6Null()
            Me(Me.tableOPS64.TerminationDate6Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class OPS66Row
        Inherits Global.System.Data.DataRow
        
        Private tableOPS66 As OPS66DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOPS66 = CType(Me.Table,OPS66DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BatchNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.BatchNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BatchNumber' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.BatchNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.DateOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfBirth' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.DateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ActionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.ActionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActionCode' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.ActionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Supv() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.SupvColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supv' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.SupvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Worker() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.WorkerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Worker' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.WorkerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ProgramStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.ProgramStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProgramStatus' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.ProgramStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseRedeterminationDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.CaseRedeterminationDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseRedeterminationDate' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.CaseRedeterminationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DisabilityRedeterminationDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableOPS66.DisabilityRedeterminationDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisabilityRedeterminationDate' in table 'OPS66' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOPS66.DisabilityRedeterminationDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableOPS66.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableOPS66.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBatchNumberNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.BatchNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBatchNumberNull()
            Me(Me.tableOPS66.BatchNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableOPS66.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableOPS66.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.DateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOfBirthNull()
            Me(Me.tableOPS66.DateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsActionCodeNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.ActionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetActionCodeNull()
            Me(Me.tableOPS66.ActionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSupvNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.SupvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSupvNull()
            Me(Me.tableOPS66.SupvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWorkerNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.WorkerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWorkerNull()
            Me(Me.tableOPS66.WorkerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProgramStatusNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.ProgramStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProgramStatusNull()
            Me(Me.tableOPS66.ProgramStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseRedeterminationDateNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.CaseRedeterminationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseRedeterminationDateNull()
            Me(Me.tableOPS66.CaseRedeterminationDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDisabilityRedeterminationDateNull() As Boolean
            Return Me.IsNull(Me.tableOPS66.DisabilityRedeterminationDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDisabilityRedeterminationDateNull()
            Me(Me.tableOPS66.DisabilityRedeterminationDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TransactionLogRow
        Inherits Global.System.Data.DataRow
        
        Private tableTransactionLog As TransactionLogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTransactionLog = CType(Me.Table,TransactionLogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CaseNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.CaseNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CaseNumber' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.CaseNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TextFile() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.TextFileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TextFile' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.TextFileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateEntered() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.DateEnteredColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateEntered' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.DateEnteredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _Operator() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.OperatorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operator' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.OperatorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ops() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.OpsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ops' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.OpsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PersonNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.PersonNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PersonNumber' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.PersonNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Result() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.ResultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Result' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Reason() As String
            Get
                Try 
                    Return CType(Me(Me.tableTransactionLog.ReasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reason' in table 'TransactionLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTransactionLog.ReasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCaseNumberNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.CaseNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCaseNumberNull()
            Me(Me.tableTransactionLog.CaseNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTextFileNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.TextFileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTextFileNull()
            Me(Me.tableTransactionLog.TextFileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateEnteredNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.DateEnteredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateEnteredNull()
            Me(Me.tableTransactionLog.DateEnteredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_OperatorNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.OperatorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_OperatorNull()
            Me(Me.tableTransactionLog.OperatorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOpsNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.OpsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOpsNull()
            Me(Me.tableTransactionLog.OpsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPersonNumberNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.PersonNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPersonNumberNull()
            Me(Me.tableTransactionLog.PersonNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsResultNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetResultNull()
            Me(Me.tableTransactionLog.ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReasonNull() As Boolean
            Return Me.IsNull(Me.tableTransactionLog.ReasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReasonNull()
            Me(Me.tableTransactionLog.ReasonColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OPS31RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPS31Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OPS31Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OPS31Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OPS32RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPS32Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OPS32Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OPS32Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OPS61RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPS61Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OPS61Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OPS61Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OPS64RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPS64Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OPS64Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OPS64Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class OPS66RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OPS66Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As OPS66Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As OPS66Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TransactionLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TransactionLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TransactionLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TransactionLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace MedicaidDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPS31TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPS31"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("AppDate", "AppDate")
            tableMapping.ColumnMappings.Add("ActionCode", "ActionCode")
            tableMapping.ColumnMappings.Add("Eligible", "Eligible")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleInitial", "MiddleInitial")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("SocialSecurity", "SocialSecurity")
            tableMapping.ColumnMappings.Add("Sex", "Sex")
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus")
            tableMapping.ColumnMappings.Add("Race", "Race")
            tableMapping.ColumnMappings.Add("PriorCaseNumber", "PriorCaseNumber")
            tableMapping.ColumnMappings.Add("PriorPersonNumber", "PriorPersonNumber")
            tableMapping.ColumnMappings.Add("ApplicationCode", "ApplicationCode")
            tableMapping.ColumnMappings.Add("LTC", "LTC")
            tableMapping.ColumnMappings.Add("EffectiveDate1", "EffectiveDate1")
            tableMapping.ColumnMappings.Add("TerminationDate1", "TerminationDate1")
            tableMapping.ColumnMappings.Add("TypeCode1", "TypeCode1")
            tableMapping.ColumnMappings.Add("AddCode1", "AddCode1")
            tableMapping.ColumnMappings.Add("TermCode1", "TermCode1")
            tableMapping.ColumnMappings.Add("ProgramStatus1", "ProgramStatus1")
            tableMapping.ColumnMappings.Add("PregnancyDueDate1", "PregnancyDueDate1")
            tableMapping.ColumnMappings.Add("EffectiveDate2", "EffectiveDate2")
            tableMapping.ColumnMappings.Add("TerminationDate2", "TerminationDate2")
            tableMapping.ColumnMappings.Add("TypeCode2", "TypeCode2")
            tableMapping.ColumnMappings.Add("AddCode2", "AddCode2")
            tableMapping.ColumnMappings.Add("TermCode2", "TermCode2")
            tableMapping.ColumnMappings.Add("ProgramStatus2", "ProgramStatus2")
            tableMapping.ColumnMappings.Add("PregnancyDueDate2", "PregnancyDueDate2")
            tableMapping.ColumnMappings.Add("EffectiveDate3", "EffectiveDate3")
            tableMapping.ColumnMappings.Add("TerminationDate3", "TerminationDate3")
            tableMapping.ColumnMappings.Add("TypeCode3", "TypeCode3")
            tableMapping.ColumnMappings.Add("AddCode3", "AddCode3")
            tableMapping.ColumnMappings.Add("TermCode3", "TermCode3")
            tableMapping.ColumnMappings.Add("ProgramStatus3", "ProgramStatus3")
            tableMapping.ColumnMappings.Add("PregnancyDueDate3", "PregnancyDueDate3")
            tableMapping.ColumnMappings.Add("EffectiveDate4", "EffectiveDate4")
            tableMapping.ColumnMappings.Add("TerminationDate4", "TerminationDate4")
            tableMapping.ColumnMappings.Add("TypeCode4", "TypeCode4")
            tableMapping.ColumnMappings.Add("AddCode4", "AddCode4")
            tableMapping.ColumnMappings.Add("TermCode4", "TermCode4")
            tableMapping.ColumnMappings.Add("ProgramStatus4", "ProgramStatus4")
            tableMapping.ColumnMappings.Add("PregnancyDueDate4", "PregnancyDueDate4")
            tableMapping.ColumnMappings.Add("EffectiveDate5", "EffectiveDate5")
            tableMapping.ColumnMappings.Add("TerminationDate5", "TerminationDate5")
            tableMapping.ColumnMappings.Add("TypeCode5", "TypeCode5")
            tableMapping.ColumnMappings.Add("AddCode5", "AddCode5")
            tableMapping.ColumnMappings.Add("TermCode5", "TermCode5")
            tableMapping.ColumnMappings.Add("ProgramStatus5", "ProgramStatus5")
            tableMapping.ColumnMappings.Add("PregnancyDueDate5", "PregnancyDueDate5")
            tableMapping.ColumnMappings.Add("EffectiveDate6", "EffectiveDate6")
            tableMapping.ColumnMappings.Add("TerminationDate6", "TerminationDate6")
            tableMapping.ColumnMappings.Add("TypeCode6", "TypeCode6")
            tableMapping.ColumnMappings.Add("AddCode6", "AddCode6")
            tableMapping.ColumnMappings.Add("TermCode6", "TermCode6")
            tableMapping.ColumnMappings.Add("ProgramStatus6", "ProgramStatus6")
            tableMapping.ColumnMappings.Add("PregnancyDueDate6", "PregnancyDueDate6")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OPS31] ([CaseNumber], [PersonNumber], [AppDate], [ActionCode],"& _ 
                " [Eligible], [LastName], [FirstName], [MiddleInitial], [DateOfBirth], [SocialSec"& _ 
                "urity], [Sex], [MaritalStatus], [Race], [PriorCaseNumber], [PriorPersonNumber], "& _ 
                "[ApplicationCode], [LTC], [EffectiveDate1], [TerminationDate1], [TypeCode1], [Ad"& _ 
                "dCode1], [TermCode1], [ProgramStatus1], [PregnancyDueDate1], [EffectiveDate2], ["& _ 
                "TerminationDate2], [TypeCode2], [AddCode2], [TermCode2], [ProgramStatus2], [Preg"& _ 
                "nancyDueDate2], [EffectiveDate3], [TerminationDate3], [TypeCode3], [AddCode3], ["& _ 
                "TermCode3], [ProgramStatus3], [PregnancyDueDate3], [EffectiveDate4], [Terminatio"& _ 
                "nDate4], [TypeCode4], [AddCode4], [TermCode4], [ProgramStatus4], [PregnancyDueDa"& _ 
                "te4], [EffectiveDate5], [TerminationDate5], [TypeCode5], [AddCode5], [TermCode5]"& _ 
                ", [ProgramStatus5], [PregnancyDueDate5], [EffectiveDate6], [TerminationDate6], ["& _ 
                "TypeCode6], [AddCode6], [TermCode6], [ProgramStatus6], [PregnancyDueDate6]) VALU"& _ 
                "ES (@CaseNumber, @PersonNumber, @AppDate, @ActionCode, @Eligible, @LastName, @Fi"& _ 
                "rstName, @MiddleInitial, @DateOfBirth, @SocialSecurity, @Sex, @MaritalStatus, @R"& _ 
                "ace, @PriorCaseNumber, @PriorPersonNumber, @ApplicationCode, @LTC, @EffectiveDat"& _ 
                "e1, @TerminationDate1, @TypeCode1, @AddCode1, @TermCode1, @ProgramStatus1, @Preg"& _ 
                "nancyDueDate1, @EffectiveDate2, @TerminationDate2, @TypeCode2, @AddCode2, @TermC"& _ 
                "ode2, @ProgramStatus2, @PregnancyDueDate2, @EffectiveDate3, @TerminationDate3, @"& _ 
                "TypeCode3, @AddCode3, @TermCode3, @ProgramStatus3, @PregnancyDueDate3, @Effectiv"& _ 
                "eDate4, @TerminationDate4, @TypeCode4, @AddCode4, @TermCode4, @ProgramStatus4, @"& _ 
                "PregnancyDueDate4, @EffectiveDate5, @TerminationDate5, @TypeCode5, @AddCode5, @T"& _ 
                "ermCode5, @ProgramStatus5, @PregnancyDueDate5, @EffectiveDate6, @TerminationDate"& _ 
                "6, @TypeCode6, @AddCode6, @TermCode6, @ProgramStatus6, @PregnancyDueDate6)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AppDate", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AppDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActionCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Eligible", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Eligible", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleInitial", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleInitial", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfBirth", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocialSecurity", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialSecurity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaritalStatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Race", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Race", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PriorCaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PriorCaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PriorPersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PriorPersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplicationCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApplicationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LTC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TypeCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TypeCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregnancyDueDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregnancyDueDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PersonNumber, AppDate, ActionCode, Eligible, LastName, FirstNa"& _ 
                "me, MiddleInitial, DateOfBirth, SocialSecurity, Sex, MaritalStatus, Race, PriorC"& _ 
                "aseNumber, PriorPersonNumber, ApplicationCode, LTC, EffectiveDate1, TerminationD"& _ 
                "ate1, TypeCode1, AddCode1, TermCode1, ProgramStatus1, PregnancyDueDate1, Effecti"& _ 
                "veDate2, TerminationDate2, TypeCode2, AddCode2, TermCode2, ProgramStatus2, Pregn"& _ 
                "ancyDueDate2, EffectiveDate3, TerminationDate3, TypeCode3, AddCode3, TermCode3, "& _ 
                "ProgramStatus3, PregnancyDueDate3, EffectiveDate4, TerminationDate4, TypeCode4, "& _ 
                "AddCode4, TermCode4, ProgramStatus4, PregnancyDueDate4, EffectiveDate5, Terminat"& _ 
                "ionDate5, TypeCode5, AddCode5, TermCode5, ProgramStatus5, PregnancyDueDate5, Eff"& _ 
                "ectiveDate6, TerminationDate6, TypeCode6, AddCode6, TermCode6, ProgramStatus6, P"& _ 
                "regnancyDueDate6 FROM dbo.OPS31"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.OPS31DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.OPS31DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.OPS31DataTable = New MedicaidDataSet.OPS31DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.OPS31DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OPS31")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal AppDate As String,  _
                    ByVal ActionCode As String,  _
                    ByVal Eligible As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleInitial As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal SocialSecurity As String,  _
                    ByVal Sex As String,  _
                    ByVal MaritalStatus As String,  _
                    ByVal Race As String,  _
                    ByVal PriorCaseNumber As String,  _
                    ByVal PriorPersonNumber As String,  _
                    ByVal ApplicationCode As String,  _
                    ByVal LTC As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal TypeCode1 As String,  _
                    ByVal AddCode1 As String,  _
                    ByVal TermCode1 As String,  _
                    ByVal ProgramStatus1 As String,  _
                    ByVal PregnancyDueDate1 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal TypeCode2 As String,  _
                    ByVal AddCode2 As String,  _
                    ByVal TermCode2 As String,  _
                    ByVal ProgramStatus2 As String,  _
                    ByVal PregnancyDueDate2 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal TypeCode3 As String,  _
                    ByVal AddCode3 As String,  _
                    ByVal TermCode3 As String,  _
                    ByVal ProgramStatus3 As String,  _
                    ByVal PregnancyDueDate3 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal TypeCode4 As String,  _
                    ByVal AddCode4 As String,  _
                    ByVal TermCode4 As String,  _
                    ByVal ProgramStatus4 As String,  _
                    ByVal PregnancyDueDate4 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal TypeCode5 As String,  _
                    ByVal AddCode5 As String,  _
                    ByVal TermCode5 As String,  _
                    ByVal ProgramStatus5 As String,  _
                    ByVal PregnancyDueDate5 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String,  _
                    ByVal TypeCode6 As String,  _
                    ByVal AddCode6 As String,  _
                    ByVal TermCode6 As String,  _
                    ByVal ProgramStatus6 As String,  _
                    ByVal PregnancyDueDate6 As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PersonNumber,String)
            End If
            If (AppDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AppDate,String)
            End If
            If (ActionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ActionCode,String)
            End If
            If (Eligible Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Eligible,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(LastName,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FirstName,String)
            End If
            If (MiddleInitial Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MiddleInitial,String)
            End If
            If (DateOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DateOfBirth,String)
            End If
            If (SocialSecurity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SocialSecurity,String)
            End If
            If (Sex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Sex,String)
            End If
            If (MaritalStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(MaritalStatus,String)
            End If
            If (Race Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Race,String)
            End If
            If (PriorCaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PriorCaseNumber,String)
            End If
            If (PriorPersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PriorPersonNumber,String)
            End If
            If (ApplicationCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ApplicationCode,String)
            End If
            If (LTC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(LTC,String)
            End If
            If (EffectiveDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(EffectiveDate1,String)
            End If
            If (TerminationDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(TerminationDate1,String)
            End If
            If (TypeCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(TypeCode1,String)
            End If
            If (AddCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(AddCode1,String)
            End If
            If (TermCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TermCode1,String)
            End If
            If (ProgramStatus1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ProgramStatus1,String)
            End If
            If (PregnancyDueDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(PregnancyDueDate1,String)
            End If
            If (EffectiveDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(EffectiveDate2,String)
            End If
            If (TerminationDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TerminationDate2,String)
            End If
            If (TypeCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(TypeCode2,String)
            End If
            If (AddCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AddCode2,String)
            End If
            If (TermCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(TermCode2,String)
            End If
            If (ProgramStatus2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ProgramStatus2,String)
            End If
            If (PregnancyDueDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PregnancyDueDate2,String)
            End If
            If (EffectiveDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(EffectiveDate3,String)
            End If
            If (TerminationDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(TerminationDate3,String)
            End If
            If (TypeCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(TypeCode3,String)
            End If
            If (AddCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(AddCode3,String)
            End If
            If (TermCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(TermCode3,String)
            End If
            If (ProgramStatus3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(ProgramStatus3,String)
            End If
            If (PregnancyDueDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PregnancyDueDate3,String)
            End If
            If (EffectiveDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(EffectiveDate4,String)
            End If
            If (TerminationDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(TerminationDate4,String)
            End If
            If (TypeCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(TypeCode4,String)
            End If
            If (AddCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(AddCode4,String)
            End If
            If (TermCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(TermCode4,String)
            End If
            If (ProgramStatus4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(ProgramStatus4,String)
            End If
            If (PregnancyDueDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(PregnancyDueDate4,String)
            End If
            If (EffectiveDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(EffectiveDate5,String)
            End If
            If (TerminationDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(TerminationDate5,String)
            End If
            If (TypeCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(TypeCode5,String)
            End If
            If (AddCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(AddCode5,String)
            End If
            If (TermCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(TermCode5,String)
            End If
            If (ProgramStatus5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(ProgramStatus5,String)
            End If
            If (PregnancyDueDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(PregnancyDueDate5,String)
            End If
            If (EffectiveDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(EffectiveDate6,String)
            End If
            If (TerminationDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(TerminationDate6,String)
            End If
            If (TypeCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(TypeCode6,String)
            End If
            If (AddCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(AddCode6,String)
            End If
            If (TermCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(TermCode6,String)
            End If
            If (ProgramStatus6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(ProgramStatus6,String)
            End If
            If (PregnancyDueDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(PregnancyDueDate6,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPS32TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPS32"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("ActionCode", "ActionCode")
            tableMapping.ColumnMappings.Add("InsuranceCode1", "InsuranceCode1")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber1", "InsurancePolicyNumber1")
            tableMapping.ColumnMappings.Add("EffectiveDate1", "EffectiveDate1")
            tableMapping.ColumnMappings.Add("TerminationDate1", "TerminationDate1")
            tableMapping.ColumnMappings.Add("InsuranceCode2", "InsuranceCode2")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber2", "InsurancePolicyNumber2")
            tableMapping.ColumnMappings.Add("EffectiveDate2", "EffectiveDate2")
            tableMapping.ColumnMappings.Add("TerminationDate2", "TerminationDate2")
            tableMapping.ColumnMappings.Add("InsuranceCode3", "InsuranceCode3")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber3", "InsurancePolicyNumber3")
            tableMapping.ColumnMappings.Add("EffectiveDate3", "EffectiveDate3")
            tableMapping.ColumnMappings.Add("TerminationDate3", "TerminationDate3")
            tableMapping.ColumnMappings.Add("InsuranceCode4", "InsuranceCode4")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber4", "InsurancePolicyNumber4")
            tableMapping.ColumnMappings.Add("EffectiveDate4", "EffectiveDate4")
            tableMapping.ColumnMappings.Add("TerminationDate4", "TerminationDate4")
            tableMapping.ColumnMappings.Add("InsuranceCode5", "InsuranceCode5")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber5", "InsurancePolicyNumber5")
            tableMapping.ColumnMappings.Add("EffectiveDate5", "EffectiveDate5")
            tableMapping.ColumnMappings.Add("TerminationDate5", "TerminationDate5")
            tableMapping.ColumnMappings.Add("InsuranceCode6", "InsuranceCode6")
            tableMapping.ColumnMappings.Add("InsurancePolicyNumber6", "InsurancePolicyNumber6")
            tableMapping.ColumnMappings.Add("EffectiveDate6", "EffectiveDate6")
            tableMapping.ColumnMappings.Add("TerminationDate6", "TerminationDate6")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OPS32] ([CaseNumber], [PersonNumber], [LastName], [FirstName],"& _ 
                " [DateOfBirth], [ActionCode], [InsuranceCode1], [InsurancePolicyNumber1], [Effec"& _ 
                "tiveDate1], [TerminationDate1], [InsuranceCode2], [InsurancePolicyNumber2], [Eff"& _ 
                "ectiveDate2], [TerminationDate2], [InsuranceCode3], [InsurancePolicyNumber3], [E"& _ 
                "ffectiveDate3], [TerminationDate3], [InsuranceCode4], [InsurancePolicyNumber4], "& _ 
                "[EffectiveDate4], [TerminationDate4], [InsuranceCode5], [InsurancePolicyNumber5]"& _ 
                ", [EffectiveDate5], [TerminationDate5], [InsuranceCode6], [InsurancePolicyNumber"& _ 
                "6], [EffectiveDate6], [TerminationDate6]) VALUES (@CaseNumber, @PersonNumber, @L"& _ 
                "astName, @FirstName, @DateOfBirth, @ActionCode, @InsuranceCode1, @InsurancePolic"& _ 
                "yNumber1, @EffectiveDate1, @TerminationDate1, @InsuranceCode2, @InsurancePolicyN"& _ 
                "umber2, @EffectiveDate2, @TerminationDate2, @InsuranceCode3, @InsurancePolicyNum"& _ 
                "ber3, @EffectiveDate3, @TerminationDate3, @InsuranceCode4, @InsurancePolicyNumbe"& _ 
                "r4, @EffectiveDate4, @TerminationDate4, @InsuranceCode5, @InsurancePolicyNumber5"& _ 
                ", @EffectiveDate5, @TerminationDate5, @InsuranceCode6, @InsurancePolicyNumber6, "& _ 
                "@EffectiveDate6, @TerminationDate6)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfBirth", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActionCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsuranceCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsuranceCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsurancePolicyNumber6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsurancePolicyNumber6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PersonNumber, LastName, FirstName, DateOfBirth, ActionCode, In"& _ 
                "suranceCode1, InsurancePolicyNumber1, EffectiveDate1, TerminationDate1, Insuranc"& _ 
                "eCode2, InsurancePolicyNumber2, EffectiveDate2, TerminationDate2, InsuranceCode3"& _ 
                ", InsurancePolicyNumber3, EffectiveDate3, TerminationDate3, InsuranceCode4, Insu"& _ 
                "rancePolicyNumber4, EffectiveDate4, TerminationDate4, InsuranceCode5, InsuranceP"& _ 
                "olicyNumber5, EffectiveDate5, TerminationDate5, InsuranceCode6, InsurancePolicyN"& _ 
                "umber6, EffectiveDate6, TerminationDate6 FROM dbo.OPS32"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.OPS32DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.OPS32DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.OPS32DataTable = New MedicaidDataSet.OPS32DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.OPS32DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OPS32")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal ActionCode As String,  _
                    ByVal InsuranceCode1 As String,  _
                    ByVal InsurancePolicyNumber1 As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal InsuranceCode2 As String,  _
                    ByVal InsurancePolicyNumber2 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal InsuranceCode3 As String,  _
                    ByVal InsurancePolicyNumber3 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal InsuranceCode4 As String,  _
                    ByVal InsurancePolicyNumber4 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal InsuranceCode5 As String,  _
                    ByVal InsurancePolicyNumber5 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal InsuranceCode6 As String,  _
                    ByVal InsurancePolicyNumber6 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PersonNumber,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LastName,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FirstName,String)
            End If
            If (DateOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DateOfBirth,String)
            End If
            If (ActionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ActionCode,String)
            End If
            If (InsuranceCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(InsuranceCode1,String)
            End If
            If (InsurancePolicyNumber1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(InsurancePolicyNumber1,String)
            End If
            If (EffectiveDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(EffectiveDate1,String)
            End If
            If (TerminationDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TerminationDate1,String)
            End If
            If (InsuranceCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(InsuranceCode2,String)
            End If
            If (InsurancePolicyNumber2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(InsurancePolicyNumber2,String)
            End If
            If (EffectiveDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EffectiveDate2,String)
            End If
            If (TerminationDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TerminationDate2,String)
            End If
            If (InsuranceCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(InsuranceCode3,String)
            End If
            If (InsurancePolicyNumber3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(InsurancePolicyNumber3,String)
            End If
            If (EffectiveDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(EffectiveDate3,String)
            End If
            If (TerminationDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TerminationDate3,String)
            End If
            If (InsuranceCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(InsuranceCode4,String)
            End If
            If (InsurancePolicyNumber4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(InsurancePolicyNumber4,String)
            End If
            If (EffectiveDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(EffectiveDate4,String)
            End If
            If (TerminationDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TerminationDate4,String)
            End If
            If (InsuranceCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(InsuranceCode5,String)
            End If
            If (InsurancePolicyNumber5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(InsurancePolicyNumber5,String)
            End If
            If (EffectiveDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(EffectiveDate5,String)
            End If
            If (TerminationDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TerminationDate5,String)
            End If
            If (InsuranceCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(InsuranceCode6,String)
            End If
            If (InsurancePolicyNumber6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(InsurancePolicyNumber6,String)
            End If
            If (EffectiveDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(EffectiveDate6,String)
            End If
            If (TerminationDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(TerminationDate6,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPS61TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPS61"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("BatchNumber", "BatchNumber")
            tableMapping.ColumnMappings.Add("ActionCode", "ActionCode")
            tableMapping.ColumnMappings.Add("Office", "Office")
            tableMapping.ColumnMappings.Add("ProviderWarning", "ProviderWarning")
            tableMapping.ColumnMappings.Add("CaseName", "CaseName")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("City", "City")
            tableMapping.ColumnMappings.Add("State", "State")
            tableMapping.ColumnMappings.Add("Zip", "Zip")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("Int1", "Int1")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("SocSec", "SocSec")
            tableMapping.ColumnMappings.Add("Sex", "Sex")
            tableMapping.ColumnMappings.Add("MaritalStat", "MaritalStat")
            tableMapping.ColumnMappings.Add("Race", "Race")
            tableMapping.ColumnMappings.Add("PriorCase", "PriorCase")
            tableMapping.ColumnMappings.Add("PriorPerNumber", "PriorPerNumber")
            tableMapping.ColumnMappings.Add("AlienType", "AlienType")
            tableMapping.ColumnMappings.Add("EntryDate", "EntryDate")
            tableMapping.ColumnMappings.Add("EligSeg", "EligSeg")
            tableMapping.ColumnMappings.Add("EffDate1", "EffDate1")
            tableMapping.ColumnMappings.Add("TermDate1", "TermDate1")
            tableMapping.ColumnMappings.Add("AddCode1", "AddCode1")
            tableMapping.ColumnMappings.Add("TRMCode1", "TRMCode1")
            tableMapping.ColumnMappings.Add("PGM1", "PGM1")
            tableMapping.ColumnMappings.Add("SUPV1", "SUPV1")
            tableMapping.ColumnMappings.Add("RES1", "RES1")
            tableMapping.ColumnMappings.Add("ExtType1", "ExtType1")
            tableMapping.ColumnMappings.Add("PregDuedate1", "PregDuedate1")
            tableMapping.ColumnMappings.Add("EffDate2", "EffDate2")
            tableMapping.ColumnMappings.Add("TermDate2", "TermDate2")
            tableMapping.ColumnMappings.Add("AddCode2", "AddCode2")
            tableMapping.ColumnMappings.Add("TRMCode2", "TRMCode2")
            tableMapping.ColumnMappings.Add("PGM2", "PGM2")
            tableMapping.ColumnMappings.Add("SUPV2", "SUPV2")
            tableMapping.ColumnMappings.Add("RES2", "RES2")
            tableMapping.ColumnMappings.Add("ExtType2", "ExtType2")
            tableMapping.ColumnMappings.Add("PregDuedate2", "PregDuedate2")
            tableMapping.ColumnMappings.Add("EffDate3", "EffDate3")
            tableMapping.ColumnMappings.Add("TermDate3", "TermDate3")
            tableMapping.ColumnMappings.Add("AddCode3", "AddCode3")
            tableMapping.ColumnMappings.Add("TRMCode3", "TRMCode3")
            tableMapping.ColumnMappings.Add("PGM3", "PGM3")
            tableMapping.ColumnMappings.Add("SUPV3", "SUPV3")
            tableMapping.ColumnMappings.Add("RES3", "RES3")
            tableMapping.ColumnMappings.Add("ExtType3", "ExtType3")
            tableMapping.ColumnMappings.Add("PregDuedate3", "PregDuedate3")
            tableMapping.ColumnMappings.Add("EffDate4", "EffDate4")
            tableMapping.ColumnMappings.Add("TermDate4", "TermDate4")
            tableMapping.ColumnMappings.Add("AddCode4", "AddCode4")
            tableMapping.ColumnMappings.Add("TRMCode4", "TRMCode4")
            tableMapping.ColumnMappings.Add("PGM4", "PGM4")
            tableMapping.ColumnMappings.Add("SUPV4", "SUPV4")
            tableMapping.ColumnMappings.Add("RES4", "RES4")
            tableMapping.ColumnMappings.Add("ExtType4", "ExtType4")
            tableMapping.ColumnMappings.Add("PregDuedate4", "PregDuedate4")
            tableMapping.ColumnMappings.Add("EffDate5", "EffDate5")
            tableMapping.ColumnMappings.Add("TermDate5", "TermDate5")
            tableMapping.ColumnMappings.Add("AddCode5", "AddCode5")
            tableMapping.ColumnMappings.Add("TRMCode5", "TRMCode5")
            tableMapping.ColumnMappings.Add("PGM5", "PGM5")
            tableMapping.ColumnMappings.Add("SUPV5", "SUPV5")
            tableMapping.ColumnMappings.Add("RES5", "RES5")
            tableMapping.ColumnMappings.Add("ExtType5", "ExtType5")
            tableMapping.ColumnMappings.Add("PregDuedate5", "PregDuedate5")
            tableMapping.ColumnMappings.Add("EffDate6", "EffDate6")
            tableMapping.ColumnMappings.Add("TermDate6", "TermDate6")
            tableMapping.ColumnMappings.Add("AddCode6", "AddCode6")
            tableMapping.ColumnMappings.Add("TRMCode6", "TRMCode6")
            tableMapping.ColumnMappings.Add("PGM6", "PGM6")
            tableMapping.ColumnMappings.Add("SUPV6", "SUPV6")
            tableMapping.ColumnMappings.Add("RES6", "RES6")
            tableMapping.ColumnMappings.Add("ExtType6", "ExtType6")
            tableMapping.ColumnMappings.Add("PregDuedate6", "PregDuedate6")
            tableMapping.ColumnMappings.Add("AddressAction", "AddressAction")
            tableMapping.ColumnMappings.Add("PersonAction", "PersonAction")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OPS61] ([CaseNumber], [PersonNumber], [BatchNumber], [ActionCo"& _ 
                "de], [Office], [ProviderWarning], [CaseName], [Address], [City], [State], [Zip],"& _ 
                " [LastName], [FirstName], [Int1], [DateOfBirth], [SocSec], [Sex], [MaritalStat],"& _ 
                " [Race], [PriorCase], [PriorPerNumber], [AlienType], [EntryDate], [EligSeg], [Ef"& _ 
                "fDate1], [TermDate1], [AddCode1], [TRMCode1], [PGM1], [SUPV1], [RES1], [ExtType1"& _ 
                "], [PregDuedate1], [EffDate2], [TermDate2], [AddCode2], [TRMCode2], [PGM2], [SUP"& _ 
                "V2], [RES2], [ExtType2], [PregDuedate2], [EffDate3], [TermDate3], [AddCode3], [T"& _ 
                "RMCode3], [PGM3], [SUPV3], [RES3], [ExtType3], [PregDuedate3], [EffDate4], [Term"& _ 
                "Date4], [AddCode4], [TRMCode4], [PGM4], [SUPV4], [RES4], [ExtType4], [PregDuedat"& _ 
                "e4], [EffDate5], [TermDate5], [AddCode5], [TRMCode5], [PGM5], [SUPV5], [RES5], ["& _ 
                "ExtType5], [PregDuedate5], [EffDate6], [TermDate6], [AddCode6], [TRMCode6], [PGM"& _ 
                "6], [SUPV6], [RES6], [ExtType6], [PregDuedate6], [AddressAction], [PersonAction]"& _ 
                ") VALUES (@CaseNumber, @PersonNumber, @BatchNumber, @ActionCode, @Office, @Provi"& _ 
                "derWarning, @CaseName, @Address, @City, @State, @Zip, @LastName, @FirstName, @In"& _ 
                "t1, @DateOfBirth, @SocSec, @Sex, @MaritalStat, @Race, @PriorCase, @PriorPerNumbe"& _ 
                "r, @AlienType, @EntryDate, @EligSeg, @EffDate1, @TermDate1, @AddCode1, @TRMCode1"& _ 
                ", @PGM1, @SUPV1, @RES1, @ExtType1, @PregDuedate1, @EffDate2, @TermDate2, @AddCod"& _ 
                "e2, @TRMCode2, @PGM2, @SUPV2, @RES2, @ExtType2, @PregDuedate2, @EffDate3, @TermD"& _ 
                "ate3, @AddCode3, @TRMCode3, @PGM3, @SUPV3, @RES3, @ExtType3, @PregDuedate3, @Eff"& _ 
                "Date4, @TermDate4, @AddCode4, @TRMCode4, @PGM4, @SUPV4, @RES4, @ExtType4, @PregD"& _ 
                "uedate4, @EffDate5, @TermDate5, @AddCode5, @TRMCode5, @PGM5, @SUPV5, @RES5, @Ext"& _ 
                "Type5, @PregDuedate5, @EffDate6, @TermDate6, @AddCode6, @TRMCode6, @PGM6, @SUPV6"& _ 
                ", @RES6, @ExtType6, @PregDuedate6, @AddressAction, @PersonAction)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActionCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Office", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Office", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProviderWarning", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProviderWarning", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@State", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Zip", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Zip", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Int1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Int1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfBirth", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocSec", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocSec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaritalStat", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaritalStat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Race", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Race", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PriorCase", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PriorCase", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PriorPerNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PriorPerNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AlienType", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AlienType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EntryDate", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EntryDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EligSeg", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EligSeg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TermDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TermDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRMCode6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRMCode6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PGM6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PGM6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUPV6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUPV6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ExtType6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ExtType6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PregDuedate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PregDuedate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AddressAction", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AddressAction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonAction", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonAction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PersonNumber, BatchNumber, ActionCode, Office, ProviderWarning"& _ 
                ", CaseName, Address, City, State, Zip, LastName, FirstName, Int1, DateOfBirth, S"& _ 
                "ocSec, Sex, MaritalStat, Race, PriorCase, PriorPerNumber, AlienType, EntryDate, "& _ 
                "EligSeg, EffDate1, TermDate1, AddCode1, TRMCode1, PGM1, SUPV1, RES1, ExtType1, P"& _ 
                "regDuedate1, EffDate2, TermDate2, AddCode2, TRMCode2, PGM2, SUPV2, RES2, ExtType"& _ 
                "2, PregDuedate2, EffDate3, TermDate3, AddCode3, TRMCode3, PGM3, SUPV3, RES3, Ext"& _ 
                "Type3, PregDuedate3, EffDate4, TermDate4, AddCode4, TRMCode4, PGM4, SUPV4, RES4,"& _ 
                " ExtType4, PregDuedate4, EffDate5, TermDate5, AddCode5, TRMCode5, PGM5, SUPV5, R"& _ 
                "ES5, ExtType5, PregDuedate5, EffDate6, TermDate6, AddCode6, TRMCode6, PGM6, SUPV"& _ 
                "6, RES6, ExtType6, PregDuedate6, AddressAction, PersonAction FROM dbo.OPS61"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.OPS61DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.OPS61DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.OPS61DataTable = New MedicaidDataSet.OPS61DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.OPS61DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OPS61")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal BatchNumber As String,  _
                    ByVal ActionCode As String,  _
                    ByVal Office As String,  _
                    ByVal ProviderWarning As String,  _
                    ByVal CaseName As String,  _
                    ByVal Address As String,  _
                    ByVal City As String,  _
                    ByVal State As String,  _
                    ByVal Zip As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal Int1 As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal SocSec As String,  _
                    ByVal Sex As String,  _
                    ByVal MaritalStat As String,  _
                    ByVal Race As String,  _
                    ByVal PriorCase As String,  _
                    ByVal PriorPerNumber As String,  _
                    ByVal AlienType As String,  _
                    ByVal EntryDate As String,  _
                    ByVal EligSeg As String,  _
                    ByVal EffDate1 As String,  _
                    ByVal TermDate1 As String,  _
                    ByVal AddCode1 As String,  _
                    ByVal TRMCode1 As String,  _
                    ByVal PGM1 As String,  _
                    ByVal SUPV1 As String,  _
                    ByVal RES1 As String,  _
                    ByVal ExtType1 As String,  _
                    ByVal PregDuedate1 As String,  _
                    ByVal EffDate2 As String,  _
                    ByVal TermDate2 As String,  _
                    ByVal AddCode2 As String,  _
                    ByVal TRMCode2 As String,  _
                    ByVal PGM2 As String,  _
                    ByVal SUPV2 As String,  _
                    ByVal RES2 As String,  _
                    ByVal ExtType2 As String,  _
                    ByVal PregDuedate2 As String,  _
                    ByVal EffDate3 As String,  _
                    ByVal TermDate3 As String,  _
                    ByVal AddCode3 As String,  _
                    ByVal TRMCode3 As String,  _
                    ByVal PGM3 As String,  _
                    ByVal SUPV3 As String,  _
                    ByVal RES3 As String,  _
                    ByVal ExtType3 As String,  _
                    ByVal PregDuedate3 As String,  _
                    ByVal EffDate4 As String,  _
                    ByVal TermDate4 As String,  _
                    ByVal AddCode4 As String,  _
                    ByVal TRMCode4 As String,  _
                    ByVal PGM4 As String,  _
                    ByVal SUPV4 As String,  _
                    ByVal RES4 As String,  _
                    ByVal ExtType4 As String,  _
                    ByVal PregDuedate4 As String,  _
                    ByVal EffDate5 As String,  _
                    ByVal TermDate5 As String,  _
                    ByVal AddCode5 As String,  _
                    ByVal TRMCode5 As String,  _
                    ByVal PGM5 As String,  _
                    ByVal SUPV5 As String,  _
                    ByVal RES5 As String,  _
                    ByVal ExtType5 As String,  _
                    ByVal PregDuedate5 As String,  _
                    ByVal EffDate6 As String,  _
                    ByVal TermDate6 As String,  _
                    ByVal AddCode6 As String,  _
                    ByVal TRMCode6 As String,  _
                    ByVal PGM6 As String,  _
                    ByVal SUPV6 As String,  _
                    ByVal RES6 As String,  _
                    ByVal ExtType6 As String,  _
                    ByVal PregDuedate6 As String,  _
                    ByVal AddressAction As String,  _
                    ByVal PersonAction As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PersonNumber,String)
            End If
            If (BatchNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BatchNumber,String)
            End If
            If (ActionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ActionCode,String)
            End If
            If (Office Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Office,String)
            End If
            If (ProviderWarning Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ProviderWarning,String)
            End If
            If (CaseName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CaseName,String)
            End If
            If (Address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Address,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(City,String)
            End If
            If (State Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(State,String)
            End If
            If (Zip Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Zip,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(LastName,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FirstName,String)
            End If
            If (Int1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Int1,String)
            End If
            If (DateOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DateOfBirth,String)
            End If
            If (SocSec Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SocSec,String)
            End If
            If (Sex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Sex,String)
            End If
            If (MaritalStat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(MaritalStat,String)
            End If
            If (Race Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Race,String)
            End If
            If (PriorCase Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(PriorCase,String)
            End If
            If (PriorPerNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PriorPerNumber,String)
            End If
            If (AlienType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(AlienType,String)
            End If
            If (EntryDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(EntryDate,String)
            End If
            If (EligSeg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EligSeg,String)
            End If
            If (EffDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(EffDate1,String)
            End If
            If (TermDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TermDate1,String)
            End If
            If (AddCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(AddCode1,String)
            End If
            If (TRMCode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TRMCode1,String)
            End If
            If (PGM1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PGM1,String)
            End If
            If (SUPV1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SUPV1,String)
            End If
            If (RES1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RES1,String)
            End If
            If (ExtType1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ExtType1,String)
            End If
            If (PregDuedate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(PregDuedate1,String)
            End If
            If (EffDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(EffDate2,String)
            End If
            If (TermDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(TermDate2,String)
            End If
            If (AddCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(AddCode2,String)
            End If
            If (TRMCode2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(TRMCode2,String)
            End If
            If (PGM2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PGM2,String)
            End If
            If (SUPV2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SUPV2,String)
            End If
            If (RES2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(RES2,String)
            End If
            If (ExtType2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ExtType2,String)
            End If
            If (PregDuedate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(PregDuedate2,String)
            End If
            If (EffDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(EffDate3,String)
            End If
            If (TermDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(TermDate3,String)
            End If
            If (AddCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(AddCode3,String)
            End If
            If (TRMCode3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(TRMCode3,String)
            End If
            If (PGM3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(PGM3,String)
            End If
            If (SUPV3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(SUPV3,String)
            End If
            If (RES3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RES3,String)
            End If
            If (ExtType3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(ExtType3,String)
            End If
            If (PregDuedate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(PregDuedate3,String)
            End If
            If (EffDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(EffDate4,String)
            End If
            If (TermDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(TermDate4,String)
            End If
            If (AddCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(AddCode4,String)
            End If
            If (TRMCode4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(TRMCode4,String)
            End If
            If (PGM4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(PGM4,String)
            End If
            If (SUPV4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SUPV4,String)
            End If
            If (RES4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(RES4,String)
            End If
            If (ExtType4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(ExtType4,String)
            End If
            If (PregDuedate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(PregDuedate4,String)
            End If
            If (EffDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(EffDate5,String)
            End If
            If (TermDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(TermDate5,String)
            End If
            If (AddCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(AddCode5,String)
            End If
            If (TRMCode5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(TRMCode5,String)
            End If
            If (PGM5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(PGM5,String)
            End If
            If (SUPV5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(SUPV5,String)
            End If
            If (RES5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(RES5,String)
            End If
            If (ExtType5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ExtType5,String)
            End If
            If (PregDuedate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(PregDuedate5,String)
            End If
            If (EffDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(EffDate6,String)
            End If
            If (TermDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(TermDate6,String)
            End If
            If (AddCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(AddCode6,String)
            End If
            If (TRMCode6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(TRMCode6,String)
            End If
            If (PGM6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(PGM6,String)
            End If
            If (SUPV6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(SUPV6,String)
            End If
            If (RES6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(RES6,String)
            End If
            If (ExtType6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(ExtType6,String)
            End If
            If (PregDuedate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(PregDuedate6,String)
            End If
            If (AddressAction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(AddressAction,String)
            End If
            If (PersonAction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(PersonAction,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPS64TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPS64"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("BatchNumber", "BatchNumber")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("ActionCode", "ActionCode")
            tableMapping.ColumnMappings.Add("ProgramNumber1", "ProgramNumber1")
            tableMapping.ColumnMappings.Add("EffectiveDate1", "EffectiveDate1")
            tableMapping.ColumnMappings.Add("TerminationDate1", "TerminationDate1")
            tableMapping.ColumnMappings.Add("ProgramNumber2", "ProgramNumber2")
            tableMapping.ColumnMappings.Add("EffectiveDate2", "EffectiveDate2")
            tableMapping.ColumnMappings.Add("TerminationDate2", "TerminationDate2")
            tableMapping.ColumnMappings.Add("ProgramNumber3", "ProgramNumber3")
            tableMapping.ColumnMappings.Add("EffectiveDate3", "EffectiveDate3")
            tableMapping.ColumnMappings.Add("TerminationDate3", "TerminationDate3")
            tableMapping.ColumnMappings.Add("ProgramNumber4", "ProgramNumber4")
            tableMapping.ColumnMappings.Add("EffectiveDate4", "EffectiveDate4")
            tableMapping.ColumnMappings.Add("TerminationDate4", "TerminationDate4")
            tableMapping.ColumnMappings.Add("ProgramNumber5", "ProgramNumber5")
            tableMapping.ColumnMappings.Add("EffectiveDate5", "EffectiveDate5")
            tableMapping.ColumnMappings.Add("TerminationDate5", "TerminationDate5")
            tableMapping.ColumnMappings.Add("ProgramNumber6", "ProgramNumber6")
            tableMapping.ColumnMappings.Add("EffectiveDate6", "EffectiveDate6")
            tableMapping.ColumnMappings.Add("TerminationDate6", "TerminationDate6")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OPS64] ([CaseNumber], [PersonNumber], [BatchNumber], [LastName"& _ 
                "], [FirstName], [DateOfBirth], [ActionCode], [ProgramNumber1], [EffectiveDate1],"& _ 
                " [TerminationDate1], [ProgramNumber2], [EffectiveDate2], [TerminationDate2], [Pr"& _ 
                "ogramNumber3], [EffectiveDate3], [TerminationDate3], [ProgramNumber4], [Effectiv"& _ 
                "eDate4], [TerminationDate4], [ProgramNumber5], [EffectiveDate5], [TerminationDat"& _ 
                "e5], [ProgramNumber6], [EffectiveDate6], [TerminationDate6]) VALUES (@CaseNumber"& _ 
                ", @PersonNumber, @BatchNumber, @LastName, @FirstName, @DateOfBirth, @ActionCode,"& _ 
                " @ProgramNumber1, @EffectiveDate1, @TerminationDate1, @ProgramNumber2, @Effectiv"& _ 
                "eDate2, @TerminationDate2, @ProgramNumber3, @EffectiveDate3, @TerminationDate3, "& _ 
                "@ProgramNumber4, @EffectiveDate4, @TerminationDate4, @ProgramNumber5, @Effective"& _ 
                "Date5, @TerminationDate5, @ProgramNumber6, @EffectiveDate6, @TerminationDate6)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfBirth", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActionCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate4", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate5", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramNumber6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramNumber6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EffectiveDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EffectiveDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TerminationDate6", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TerminationDate6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PersonNumber, BatchNumber, LastName, FirstName, DateOfBirth, A"& _ 
                "ctionCode, ProgramNumber1, EffectiveDate1, TerminationDate1, ProgramNumber2, Eff"& _ 
                "ectiveDate2, TerminationDate2, ProgramNumber3, EffectiveDate3, TerminationDate3,"& _ 
                " ProgramNumber4, EffectiveDate4, TerminationDate4, ProgramNumber5, EffectiveDate"& _ 
                "5, TerminationDate5, ProgramNumber6, EffectiveDate6, TerminationDate6 FROM dbo.O"& _ 
                "PS64"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.OPS64DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.OPS64DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.OPS64DataTable = New MedicaidDataSet.OPS64DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.OPS64DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OPS64")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CaseNumber As String,  _
                    ByVal PersonNumber As String,  _
                    ByVal BatchNumber As String,  _
                    ByVal LastName As String,  _
                    ByVal FirstName As String,  _
                    ByVal DateOfBirth As String,  _
                    ByVal ActionCode As String,  _
                    ByVal ProgramNumber1 As String,  _
                    ByVal EffectiveDate1 As String,  _
                    ByVal TerminationDate1 As String,  _
                    ByVal ProgramNumber2 As String,  _
                    ByVal EffectiveDate2 As String,  _
                    ByVal TerminationDate2 As String,  _
                    ByVal ProgramNumber3 As String,  _
                    ByVal EffectiveDate3 As String,  _
                    ByVal TerminationDate3 As String,  _
                    ByVal ProgramNumber4 As String,  _
                    ByVal EffectiveDate4 As String,  _
                    ByVal TerminationDate4 As String,  _
                    ByVal ProgramNumber5 As String,  _
                    ByVal EffectiveDate5 As String,  _
                    ByVal TerminationDate5 As String,  _
                    ByVal ProgramNumber6 As String,  _
                    ByVal EffectiveDate6 As String,  _
                    ByVal TerminationDate6 As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PersonNumber,String)
            End If
            If (BatchNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BatchNumber,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LastName,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FirstName,String)
            End If
            If (DateOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DateOfBirth,String)
            End If
            If (ActionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ActionCode,String)
            End If
            If (ProgramNumber1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ProgramNumber1,String)
            End If
            If (EffectiveDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(EffectiveDate1,String)
            End If
            If (TerminationDate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TerminationDate1,String)
            End If
            If (ProgramNumber2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ProgramNumber2,String)
            End If
            If (EffectiveDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(EffectiveDate2,String)
            End If
            If (TerminationDate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TerminationDate2,String)
            End If
            If (ProgramNumber3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(ProgramNumber3,String)
            End If
            If (EffectiveDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(EffectiveDate3,String)
            End If
            If (TerminationDate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(TerminationDate3,String)
            End If
            If (ProgramNumber4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ProgramNumber4,String)
            End If
            If (EffectiveDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(EffectiveDate4,String)
            End If
            If (TerminationDate4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(TerminationDate4,String)
            End If
            If (ProgramNumber5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ProgramNumber5,String)
            End If
            If (EffectiveDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(EffectiveDate5,String)
            End If
            If (TerminationDate5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(TerminationDate5,String)
            End If
            If (ProgramNumber6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ProgramNumber6,String)
            End If
            If (EffectiveDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(EffectiveDate6,String)
            End If
            If (TerminationDate6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TerminationDate6,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OPS66TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OPS66"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("BatchNumber", "BatchNumber")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("DateOfBirth", "DateOfBirth")
            tableMapping.ColumnMappings.Add("ActionCode", "ActionCode")
            tableMapping.ColumnMappings.Add("Supv", "Supv")
            tableMapping.ColumnMappings.Add("Worker", "Worker")
            tableMapping.ColumnMappings.Add("ProgramStatus", "ProgramStatus")
            tableMapping.ColumnMappings.Add("CaseRedeterminationDate", "CaseRedeterminationDate")
            tableMapping.ColumnMappings.Add("DisabilityRedeterminationDate", "DisabilityRedeterminationDate")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OPS66] ([CaseNumber], [PersonNumber], [BatchNumber], [LastName"& _ 
                "], [FirstName], [DateOfBirth], [ActionCode], [Supv], [Worker], [ProgramStatus], "& _ 
                "[CaseRedeterminationDate], [DisabilityRedeterminationDate]) VALUES (@CaseNumber,"& _ 
                " @PersonNumber, @BatchNumber, @LastName, @FirstName, @DateOfBirth, @ActionCode, "& _ 
                "@Supv, @Worker, @ProgramStatus, @CaseRedeterminationDate, @DisabilityRedetermina"& _ 
                "tionDate)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BatchNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BatchNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfBirth", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ActionCode", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ActionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Supv", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Supv", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Worker", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Worker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProgramStatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProgramStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseRedeterminationDate", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseRedeterminationDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DisabilityRedeterminationDate", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DisabilityRedeterminationDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, PersonNumber, BatchNumber, LastName, FirstName, DateOfBirth, A"& _ 
                "ctionCode, Supv, Worker, ProgramStatus, CaseRedeterminationDate, DisabilityRedet"& _ 
                "erminationDate FROM dbo.OPS66"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.OPS66DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.OPS66DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.OPS66DataTable = New MedicaidDataSet.OPS66DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.OPS66DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "OPS66")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CaseNumber As String, ByVal PersonNumber As String, ByVal BatchNumber As String, ByVal LastName As String, ByVal FirstName As String, ByVal DateOfBirth As String, ByVal ActionCode As String, ByVal Supv As String, ByVal Worker As String, ByVal ProgramStatus As String, ByVal CaseRedeterminationDate As String, ByVal DisabilityRedeterminationDate As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PersonNumber,String)
            End If
            If (BatchNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BatchNumber,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(LastName,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FirstName,String)
            End If
            If (DateOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DateOfBirth,String)
            End If
            If (ActionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ActionCode,String)
            End If
            If (Supv Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Supv,String)
            End If
            If (Worker Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Worker,String)
            End If
            If (ProgramStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ProgramStatus,String)
            End If
            If (CaseRedeterminationDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CaseRedeterminationDate,String)
            End If
            If (DisabilityRedeterminationDate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DisabilityRedeterminationDate,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TransactionLogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TransactionLog"
            tableMapping.ColumnMappings.Add("CaseNumber", "CaseNumber")
            tableMapping.ColumnMappings.Add("TextFile", "TextFile")
            tableMapping.ColumnMappings.Add("DateEntered", "DateEntered")
            tableMapping.ColumnMappings.Add("Operator", "Operator")
            tableMapping.ColumnMappings.Add("Ops", "Ops")
            tableMapping.ColumnMappings.Add("PersonNumber", "PersonNumber")
            tableMapping.ColumnMappings.Add("Result", "Result")
            tableMapping.ColumnMappings.Add("Reason", "Reason")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TransactionLog] ([CaseNumber], [TextFile], [DateEntered], [Ope"& _ 
                "rator], [Ops], [PersonNumber], [Result], [Reason]) VALUES (@CaseNumber, @TextFil"& _ 
                "e, @DateEntered, @Operator, @Ops, @PersonNumber, @Result, @Reason)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CaseNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CaseNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TextFile", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TextFile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEntered", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEntered", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operator", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operator", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ops", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ops", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PersonNumber", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PersonNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Result", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Result", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Reason", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Reason", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = "Data Source=PHOENIX\PHOENIX;Initial Catalog=Medicaid;Persist Security Info=True;U"& _ 
                "ser ID=MedicaidUser;Password=password"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CaseNumber, TextFile, DateEntered, Operator, Ops, PersonNumber, Result, Re"& _ 
                "ason FROM dbo.TransactionLog"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CaseNumber, TextFile, DateEntered, Operator, Ops, PersonNumber, Result, Re"& _ 
                "ason FROM dbo.TransactionLog WHERE DateEntered = @DateChoice ORDER BY CASENUMBER"& _ 
                ", OPS, PERSONNUMBER"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateChoice", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEntered", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As MedicaidDataSet.TransactionLogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As MedicaidDataSet.TransactionLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As MedicaidDataSet.TransactionLogDataTable = New MedicaidDataSet.TransactionLogDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As MedicaidDataSet.TransactionLogDataTable, ByVal DateChoice As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DateChoice.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateChoice.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal DateChoice As Global.System.Nullable(Of Date)) As MedicaidDataSet.TransactionLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DateChoice.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateChoice.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As MedicaidDataSet.TransactionLogDataTable = New MedicaidDataSet.TransactionLogDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As MedicaidDataSet.TransactionLogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As MedicaidDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TransactionLog")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CaseNumber As String, ByVal TextFile As String, ByVal DateEntered As Global.System.Nullable(Of Date), ByVal _Operator As String, ByVal Ops As String, ByVal PersonNumber As String, ByVal Result As String, ByVal Reason As String) As Integer
            If (CaseNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CaseNumber,String)
            End If
            If (TextFile Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TextFile,String)
            End If
            If (DateEntered.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DateEntered.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (_Operator Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(_Operator,String)
            End If
            If (Ops Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Ops,String)
            End If
            If (PersonNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PersonNumber,String)
            End If
            If (Result Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Result,String)
            End If
            If (Reason Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Reason,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
End Namespace
